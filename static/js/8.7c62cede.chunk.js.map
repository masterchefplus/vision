{"version":3,"sources":["utils/callHelpers.ts","hooks/useTokenBalance.ts","config/index.ts","components/Input/Input.tsx","hooks/useBlock.ts","hooks/useApprove.ts","utils/getTimePeriods.ts","views/Ifos/components/IfoTabButtons/index.tsx","views/Ifos/components/Hero.tsx","views/Ifos/components/IfoCard/IfoCardHeader.tsx","views/Ifos/components/IfoCard/IfoCardProgress.tsx","views/Ifos/components/IfoCard/IfoCardDescription.tsx","views/Ifos/components/IfoCard/IfoCardDetails.tsx","views/Ifos/components/IfoCard/IfoCardTime.tsx","views/Ifos/components/IfoCard/LabelButton.tsx","components/Input/BalanceInput.tsx","views/Ifos/components/IfoCard/ContributeModal.tsx","views/Ifos/components/IfoCard/IfoCardContribute.tsx","hooks/useAllowance.ts","views/Ifos/components/IfoCard/index.tsx","views/Ifos/components/Title.tsx","views/Ifos/components/IfoCards.tsx","views/Ifos/CurrentIfo.tsx","views/Ifos/PastIfo.tsx","views/Ifos/index.tsx"],"names":["approve","lpContract","masterChefContract","account","a","methods","options","address","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","BigNumber","times","pow","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","cakeContract","getContract","cakeABI","getCakeAddress","call","supply","fetchTotalSupply","useBurnedBalance","tokenAddress","balance","setBalance","balanceOf","bal","fetchBalance","useTokenBalance","useWallet","ethereum","fastRefresh","getTokenBalance","res","config","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","BSC_BLOCK_TIME","StyledInputWrapper","styled","div","props","theme","card","background","colors","borderColor","spacing","StyledInput","input","primary","Input","endAdornment","onChange","placeholder","startAdornment","useBlock","useContext","BlockContext","useApprove","dispatch","useDispatch","useMasterchef","onApprove","useCallback","fetchFarmUserDataAsync","useIfoApprove","tokenContract","spenderAddress","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","Wrapper","IfoTabButtons","useRouteMatch","url","isExact","activeIndex","size","variant","as","Link","to","Title","Heading","attrs","secondary","StyledHero","Text","Hero","TranslateString","useI18n","Container","color","StyledIfoCardHeader","Flex","Name","Description","textSubtle","IfoCardHeader","ifoId","name","subTitle","mb","alignItems","src","alt","width","height","StyledProgress","IfoCardProgress","progress","primaryStep","StyledIfoCardDescription","Divider","ToggleButton","button","isOpen","IfoCardDescription","defaultIsOpen","description","setIsOpen","onClick","StyledIfoCardDetails","Item","Display","IfoCardDetails","launchDate","launchTime","saleAmount","raiseAmount","cakeToBurn","projectSiteUrl","raisingAmount","totalAmount","href","target","rel","ml","style","display","toFixed","margin","Details","Countdown","IfoCardTime","isLoading","status","secondsUntilStart","secondsUntilEnd","block","countdownToUse","timeUntil","suffix","bold","ButtonWrapper","radii","default","LabelButton","label","buttonLabel","disabled","fontSize","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","BalanceInput","max","symbol","onSelectMax","toLocaleString","ContributeModal","currency","contract","currencyAddress","onDismiss","setValue","pendingTx","setPendingTx","getFullDisplayBalance","title","e","currentTarget","justifyContent","fullWidth","mr","IfoCardContribute","tokenDecimals","offeringTokenBalance","setOfferingTokenBalance","claimed","userInfo","setUserInfo","contractRaisingToken","useERC20","allowance","dependency","setAllowance","fetch","useIfoAllowance","useModal","onPresentContributeModal","getOfferingAmount","userinfo","claim","isFinished","percentOfUserContribution","console","error","getBalanceNumber","StyledIfoCard","Card","getStatus","currentBlock","startBlock","endBlock","IfoCard","ifo","id","releaseBlockNumber","blocksRemaining","startBlockNum","endBlockNum","state","setState","useIfoContract","Ribbon","variantColor","text","getRibbonComponent","Promise","all","parseInt","totalBlocks","fetchProgress","isActive","ribbon","UnlockButton","IfoCardWrapper","mediaQueries","md","isSingle","defaultProps","LaunchIfoCallout","BaseLayout","sm","List","ul","activeIfo","ifosConfig","find","Ifo","IfoCards","external","inactiveIfo","filter","PastIfo","map","Ifos","path","exact","CurrentIfo"],"mappings":"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","file":"static/js/8.7c62cede.chunk.js","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 1\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background: ${(props) => props.theme.card.background};\n  border-radius: 2px;\n  border: 3px solid ${(props) => props.theme.colors.borderColor};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = seconds\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 39px;\n`\n\nconst IfoTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          Next IFO\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          Past IFOs\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default IfoTabButtons\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@pancakeswap-libs/uikit'\nimport Container from 'components/layout/Container'\nimport useI18n from 'hooks/useI18n'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n//  background-image: linear-gradient(180deg, #53dee9 0%, #1fc7d4 100%);\n  padding-bottom: 40px;\n  padding-top: 40px;\n  margin-bottom: 32px;\n`\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <Container>\n        <Title>{TranslateString(500, 'IFO: Initial Farm Offerings')}</Title>\n\t\t<Heading as=\"h2\" size=\"lg\" color=\"secondary\">\n            {TranslateString(999, 'Buy new tokens with a brand new token sale model.')}\n          </Heading>        \n      </Container>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, Flex } from '@pancakeswap-libs/uikit'\n\ninterface IfoCardHeaderProps {\n  ifoId: string\n  name: string\n  subTitle: string\n}\n\nconst StyledIfoCardHeader = styled(Flex)`\n  & > div {\n    flex: 1;\n  }\n`\n\nconst Name = styled(Heading).attrs({ as: 'h3', size: 'lg' })`\n  margin-bottom: 4px;\n  text-align: right;\n`\n\nconst Description = styled(Text)`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  text-align: right;\n`\n\nconst IfoCardHeader: React.FC<IfoCardHeaderProps> = ({ ifoId, name, subTitle }) => {\n  return (\n    <StyledIfoCardHeader mb=\"24px\" alignItems=\"center\">\n      <img src={`/images/ifos/${ifoId}.svg`} alt={ifoId} width=\"64px\" height=\"64px\" />\n      <div>\n        <Name>{name}</Name>\n        <Description>{subTitle}</Description>\n      </div>\n    </StyledIfoCardHeader>\n  )\n}\n\nexport default IfoCardHeader\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Progress } from '@pancakeswap-libs/uikit'\n\ninterface IfoCardProgressProps {\n  progress: number\n}\n\nconst StyledProgress = styled.div`\n  margin-bottom: 16px;\n`\n\nconst IfoCardProgress: React.FC<IfoCardProgressProps> = ({ progress }) => {\n  return (\n    <StyledProgress>\n      <Progress primaryStep={progress} />\n    </StyledProgress>\n  )\n}\n\nexport default IfoCardProgress\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardDescriptionProps {\n  defaultIsOpen?: boolean\n  description: string\n}\n\nconst StyledIfoCardDescription = styled.div`\n  margin-top: 24px;\n  margin-bottom: 24px;\n`\n\nconst Divider = styled.div`\n  background-color: ${({ theme }) => theme.colors.borderColor};\n  height: 1px;\n  margin-left: auto;\n  margin-right: auto;\n  width: 90%;\n`\n\nconst ToggleButton = styled.button`\n  background: transparent;\n  border: none;\n  color: ${({ theme }) => theme.colors.primary};\n  cursor: pointer;\n  display: block;\n  font-weight: 600;\n  outline: 0;\n  padding: 24px 16px;\n  width: 100%;\n`\n\nconst Description = styled(Text)<{ isOpen: boolean }>`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  display: ${({ isOpen }) => (isOpen ? 'block' : 'none')};\n`\n\nconst IfoCardDescription: React.FC<IfoCardDescriptionProps> = ({ defaultIsOpen = true, description }) => {\n  const [isOpen, setIsOpen] = useState(defaultIsOpen)\n  const TranslateString = useI18n()\n\n  const handleClick = () => setIsOpen(!isOpen)\n\n  return (\n    <StyledIfoCardDescription>\n      <Divider />\n      <ToggleButton onClick={handleClick}>\n        {isOpen ? TranslateString(999, 'Hide') : TranslateString(999, 'Show')}\n      </ToggleButton>\n      <Description isOpen={isOpen}>{description}</Description>\n    </StyledIfoCardDescription>\n  )\n}\n\nexport default IfoCardDescription\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Text, LinkExternal, Link } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardDetailsProps {\n  launchDate: string\n  launchTime: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  raisingAmount: BigNumber\n  totalAmount: BigNumber\n}\n\nconst StyledIfoCardDetails = styled.div`\n  margin-bottom: 24px;\n`\n\nconst Item = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.secondary};\n  display: flex;\n`\n\nconst Display = styled(Text)`\n  flex: 1;\n`\n\nconst IfoCardDetails: React.FC<IfoCardDetailsProps> = ({\n  launchDate,\n  launchTime,\n  saleAmount,\n  raiseAmount,\n  cakeToBurn,\n  projectSiteUrl,\n  raisingAmount,\n  totalAmount,\n}) => {\n  const TranslateString = useI18n()\n\n  return (\n    <>\n      <StyledIfoCardDetails>\n        <Item>\n          <Display>{TranslateString(582, 'Launch Time')}</Display>\n          <Text>\n            {launchDate},\n            <Link\n              href=\"https://www.timeanddate.com/worldclock/singapore/singapore\"\n              target=\"blank\"\n              rel=\"noopener noreferrer\"\n              ml=\"4px\"\n              style={{ display: 'inline' }}\n            >\n              {launchTime}\n            </Link>\n          </Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(584, 'For Sale')}</Display>\n          <Text>{saleAmount}</Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(999, 'To raise (USD)')}</Display>\n          <Text>{raiseAmount}</Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(586, 'CAKE to burn (USD)')}</Display>\n          <Text>{cakeToBurn}</Text>\n        </Item>\n        <Item>\n          <Display>{TranslateString(999, 'Total raised (% of target)')}</Display>\n          <Text>{`${totalAmount.div(raisingAmount).times(100).toFixed(2)}%`}</Text>\n        </Item>\n      </StyledIfoCardDetails>\n      <LinkExternal href={projectSiteUrl} style={{ margin: 'auto' }}>\n        {TranslateString(412, 'View project site')}\n      </LinkExternal>\n    </>\n  )\n}\n\nexport default IfoCardDetails\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, Text } from '@pancakeswap-libs/uikit'\nimport { IfoStatus } from 'config/constants/types'\nimport getTimePeriods from 'utils/getTimePeriods'\nimport useI18n from 'hooks/useI18n'\n\nexport interface IfoCardTimeProps {\n  isLoading: boolean\n  status: IfoStatus\n  secondsUntilStart: number\n  secondsUntilEnd: number\n  block: number\n}\n\nconst Details = styled.div`\n  align-items: center;\n  display: flex;\n  height: 24px;\n  justify-content: center;\n  margin-bottom: 24px;\n`\n\nconst Countdown = styled.div`\n  color: ${({ theme }) => theme.colors.secondary};\n  font-size: 20px;\n  font-weight: 600;\n  text-align: center;\n`\n\nconst IfoCardTime: React.FC<IfoCardTimeProps> = ({ isLoading, status, secondsUntilStart, secondsUntilEnd, block }) => {\n  const TranslateString = useI18n()\n  const countdownToUse = status === 'coming_soon' ? secondsUntilStart : secondsUntilEnd\n  const timeUntil = getTimePeriods(countdownToUse)\n  const suffix = status === 'coming_soon' ? 'start' : 'finish'\n\n  if (isLoading) {\n    return <Details>{TranslateString(656, 'Loading...')}</Details>\n  }\n\n  if (countdownToUse <= 0) {\n    return (\n      <Details>\n        <Text bold>{TranslateString(999, 'Finished!')}</Text>\n      </Details>\n    )\n  }\n\n  return (\n    <Details>\n      <Countdown>{`${timeUntil.days}d, ${timeUntil.hours}h, ${timeUntil.minutes}m until ${suffix}`}</Countdown>\n      <Link href={`https://bscscan.com/block/countdown/${block}`} target=\"blank\" rel=\"noopener noreferrer\" ml=\"8px\">\n        (blocks)\n      </Link>\n    </Details>\n  )\n}\n\nexport default IfoCardTime\n","import React, { ButtonHTMLAttributes } from 'react'\nimport styled from 'styled-components'\nimport { Button, Text } from '@pancakeswap-libs/uikit'\n\ninterface Props extends ButtonHTMLAttributes<HTMLButtonElement> {\n  value: string\n  label?: string\n  buttonLabel: string\n  disabled?: boolean\n}\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border: solid 1px;\n  border-radius: ${({ theme }) => theme.radii.default};\n  border-color: ${({ theme }) => theme.colors.borderColor};\n  padding-left: 16px;\n`\n\nconst LabelButton: React.FC<Props> = ({ value, label, buttonLabel, onClick, disabled = false }) => {\n  return (\n    <div>\n      {label && (\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {label}\n        </Text>\n      )}\n      <ButtonWrapper>\n        <Text bold fontSize=\"20px\">\n          {value}\n        </Text>\n        <Button onClick={onClick} disabled={disabled}>\n          {buttonLabel}\n        </Button>\n      </ButtonWrapper>\n    </div>\n  )\n}\n\nexport default LabelButton\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Input, { InputProps } from './Input'\n\ninterface Props extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n}\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nconst BalanceInput: React.FC<Props> = ({ max, symbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${symbol} Available`)}</StyledMaxText>\n    </div>\n  )\n}\n\nexport default BalanceInput\n","import React, { useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Modal, Button, Flex, LinkExternal } from '@pancakeswap-libs/uikit'\nimport BalanceInput from 'components/Input/BalanceInput'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface Props {\n  currency: string\n  contract: any\n  currencyAddress: string\n  onDismiss?: () => void\n}\n\nconst ContributeModal: React.FC<Props> = ({ currency, contract, currencyAddress, onDismiss }) => {\n  const [value, setValue] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWallet()\n  const balance = getFullDisplayBalance(useTokenBalance(currencyAddress))\n\n  return (\n    <Modal title={`Contribute ${currency}`} onDismiss={onDismiss}>\n      <BalanceInput\n        value={value}\n        onChange={(e) => setValue(e.currentTarget.value)}\n        symbol={currency}\n        max={balance}\n        onSelectMax={() => setValue(balance.toString())}\n      />\n      <Flex justifyContent=\"space-between\" mb=\"24px\">\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss} mr=\"8px\">\n          Cancel\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await contract.methods\n              .deposit(new BigNumber(value).times(new BigNumber(10).pow(18)).toString())\n              .send({ from: account })\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          Confirm\n        </Button>\n      </Flex>\n      <LinkExternal\n        href=\"https://exchange.pancakeswap.finance/#/add/ETH/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\"\n        style={{ margin: 'auto' }}\n      >\n        {`Get ${currency}`}\n      </LinkExternal>\n    </Modal>\n  )\n}\n\nexport default ContributeModal\n","import React, { useState, useEffect } from 'react'\nimport { useModal, Button, Text } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Contract } from 'web3-eth-contract'\nimport { useERC20 } from 'hooks/useContract'\nimport { useIfoAllowance } from 'hooks/useAllowance'\nimport { useIfoApprove } from 'hooks/useApprove'\nimport { IfoStatus } from 'config/constants/types'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport LabelButton from './LabelButton'\nimport ContributeModal from './ContributeModal'\n\nexport interface Props {\n  address: string\n  currency: string\n  currencyAddress: string\n  contract: Contract\n  status: IfoStatus\n  raisingAmount: BigNumber\n  tokenDecimals: number\n}\n\nconst IfoCardContribute: React.FC<Props> = ({\n  address,\n  currency,\n  currencyAddress,\n  contract,\n  status,\n  raisingAmount,\n  tokenDecimals,\n}) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const [offeringTokenBalance, setOfferingTokenBalance] = useState(new BigNumber(0))\n  const [userInfo, setUserInfo] = useState({ amount: 0, claimed: false })\n\n  const { account } = useWallet()\n  const contractRaisingToken = useERC20(currencyAddress)\n  const allowance = useIfoAllowance(contractRaisingToken, address, pendingTx)\n  const onApprove = useIfoApprove(contractRaisingToken, address)\n  const [onPresentContributeModal] = useModal(\n    <ContributeModal currency={currency} contract={contract} currencyAddress={currencyAddress} />,\n  )\n\n  useEffect(() => {\n    const fetch = async () => {\n      const balance = new BigNumber(await contract.methods.getOfferingAmount(account).call())\n      const userinfo = await contract.methods.userInfo(account).call()\n\n      setUserInfo(userinfo)\n      setOfferingTokenBalance(balance)\n    }\n\n    if (account) {\n      fetch()\n    }\n  }, [account, contract.methods, pendingTx])\n\n  if (allowance === null) {\n    return null\n  }\n\n  const claim = async () => {\n    setPendingTx(true)\n    await contract.methods.harvest().send({ from: account })\n    setPendingTx(false)\n  }\n  const isFinished = status === 'finished'\n  const percentOfUserContribution = new BigNumber(userInfo.amount).div(raisingAmount).times(100)\n\n  if (allowance <= 0) {\n    return (\n      <Button\n        fullWidth\n        disabled={pendingTx || isFinished}\n        onClick={async () => {\n          try {\n            setPendingTx(true)\n            await onApprove()\n            setPendingTx(false)\n          } catch (e) {\n            setPendingTx(false)\n            console.error(e)\n          }\n        }}\n      >\n        Approve\n      </Button>\n    )\n  }\n\n  return (\n    <>\n      <LabelButton\n        disabled={pendingTx || userInfo.claimed}\n        buttonLabel={isFinished ? 'Claim' : 'Contribute'}\n        label={isFinished ? 'Your tokens to claim' : `Your contribution (${currency})`}\n        value={\n          // eslint-disable-next-line no-nested-ternary\n          isFinished\n            ? userInfo.claimed\n              ? 'Claimed'\n              : getBalanceNumber(offeringTokenBalance, tokenDecimals).toFixed(4)\n            : getBalanceNumber(new BigNumber(userInfo.amount)).toFixed(4)\n        }\n        onClick={isFinished ? claim : onPresentContributeModal}\n      />\n      <Text fontSize=\"14px\" color=\"textSubtle\">\n        {isFinished\n          ? `You'll be refunded any excess tokens when you claim`\n          : `${percentOfUserContribution.toFixed(5)}% of total`}\n      </Text>\n    </>\n  )\n}\n\nexport default IfoCardContribute\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { useCake, useLottery } from './useContract'\nimport { getAllowance } from '../utils/erc20'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account }: { account: string } = useWallet()\n  const lotteryContract = useLottery()\n  const cakeContract = useCake()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await getAllowance(cakeContract, lotteryContract, account)\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account && cakeContract && cakeContract) {\n      fetchAllowance()\n    }\n    const refreshInterval = setInterval(fetchAllowance, 10000)\n    return () => clearInterval(refreshInterval)\n  }, [account, cakeContract, lotteryContract])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\n  const { account }: { account: string } = useWallet()\n  const [allowance, setAllowance] = useState(null)\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        setAllowance(null)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { Card, CardBody, CardRibbon } from '@pancakeswap-libs/uikit'\nimport { BSC_BLOCK_TIME } from 'config'\nimport { Ifo, IfoStatus } from 'config/constants/types'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { useIfoContract } from 'hooks/useContract'\nimport UnlockButton from 'components/UnlockButton'\nimport IfoCardHeader from './IfoCardHeader'\nimport IfoCardProgress from './IfoCardProgress'\nimport IfoCardDescription from './IfoCardDescription'\nimport IfoCardDetails from './IfoCardDetails'\nimport IfoCardTime from './IfoCardTime'\nimport IfoCardContribute from './IfoCardContribute'\n\nexport interface IfoCardProps {\n  ifo: Ifo\n}\n\nconst StyledIfoCard = styled(Card)<{ ifoId: string }>`\n  background-image: ${({ ifoId }) => `url('/images/ifos/${ifoId}-bg.svg')`};\n  background-repeat: no-repeat;\n  background-size: contain;\n  padding-top: 112px;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 437px;\n  width: 100%;\n`\n\nconst getStatus = (currentBlock: number, startBlock: number, endBlock: number): IfoStatus | null => {\n  if (currentBlock < startBlock) {\n    return 'coming_soon'\n  }\n\n  if (currentBlock >= startBlock && currentBlock <= endBlock) {\n    return 'live'\n  }\n\n  if (currentBlock > endBlock) {\n    return 'finished'\n  }\n\n  return null\n}\n\nconst getRibbonComponent = (status: IfoStatus, TranslateString: (translationId: number, fallback: string) => any) => {\n  if (status === 'coming_soon') {\n    return <CardRibbon variantColor=\"textDisabled\" text={TranslateString(999, 'Coming Soon')} />\n  }\n\n  if (status === 'live') {\n    return <CardRibbon variantColor=\"primary\" text={TranslateString(999, 'LIVE NOW!')} />\n  }\n\n  return null\n}\n\nconst IfoCard: React.FC<IfoCardProps> = ({ ifo }) => {\n  const {\n    id,\n    address,\n    name,\n    subTitle,\n    description,\n    launchDate,\n    launchTime,\n    saleAmount,\n    raiseAmount,\n    cakeToBurn,\n    projectSiteUrl,\n    currency,\n    currencyAddress,\n    tokenDecimals,\n    releaseBlockNumber,\n  } = ifo\n  const [state, setState] = useState({\n    isLoading: true,\n    status: null,\n    blocksRemaining: 0,\n    secondsUntilStart: 0,\n    progress: 0,\n    secondsUntilEnd: 0,\n    raisingAmount: new BigNumber(0),\n    totalAmount: new BigNumber(0),\n    startBlockNum: 0,\n    endBlockNum: 0,\n  })\n  const { account } = useWallet()\n  const contract = useIfoContract(address)\n\n  const currentBlock = useBlock()\n  const TranslateString = useI18n()\n\n  const Ribbon = getRibbonComponent(state.status, TranslateString)\n\n  useEffect(() => {\n    const fetchProgress = async () => {\n      const [startBlock, endBlock, raisingAmount, totalAmount] = await Promise.all([\n        contract.methods.startBlock().call(),\n        contract.methods.endBlock().call(),\n        contract.methods.raisingAmount().call(),\n        contract.methods.totalAmount().call(),\n      ])\n\n      const startBlockNum = parseInt(startBlock, 10)\n      const endBlockNum = parseInt(endBlock, 10)\n\n      const status = getStatus(currentBlock, startBlockNum, endBlockNum)\n      const totalBlocks = endBlockNum - startBlockNum\n      const blocksRemaining = endBlockNum - currentBlock\n\n      // Calculate the total progress until finished or until start\n      const progress =\n        currentBlock > startBlockNum\n          ? ((currentBlock - startBlockNum) / totalBlocks) * 100\n          : ((currentBlock - releaseBlockNumber) / (startBlockNum - releaseBlockNumber)) * 100\n\n      setState({\n        isLoading: false,\n        secondsUntilEnd: blocksRemaining * BSC_BLOCK_TIME,\n        secondsUntilStart: (startBlockNum - currentBlock) * BSC_BLOCK_TIME,\n        raisingAmount: new BigNumber(raisingAmount),\n        totalAmount: new BigNumber(totalAmount),\n        status,\n        progress,\n        blocksRemaining,\n        startBlockNum,\n        endBlockNum,\n      })\n    }\n\n    fetchProgress()\n  }, [currentBlock, contract, releaseBlockNumber, setState])\n\n  const isActive = state.status === 'live'\n  const isFinished = state.status === 'finished'\n\n  return (\n    <StyledIfoCard ifoId={id} ribbon={Ribbon} isActive={isActive}>\n      <CardBody>\n        <IfoCardHeader ifoId={id} name={name} subTitle={subTitle} />\n        <IfoCardProgress progress={state.progress} />\n        <IfoCardTime\n          isLoading={state.isLoading}\n          status={state.status}\n          secondsUntilStart={state.secondsUntilStart}\n          secondsUntilEnd={state.secondsUntilEnd}\n          block={isActive || isFinished ? state.endBlockNum : state.startBlockNum}\n        />\n        {!account && <UnlockButton fullWidth />}\n        {(isActive || isFinished) && (\n          <IfoCardContribute\n            address={address}\n            currency={currency}\n            currencyAddress={currencyAddress}\n            contract={contract}\n            status={state.status}\n            raisingAmount={state.raisingAmount}\n            tokenDecimals={tokenDecimals}\n          />\n        )}\n        <IfoCardDescription description={description} />\n        <IfoCardDetails\n          launchDate={launchDate}\n          launchTime={launchTime}\n          saleAmount={saleAmount}\n          raiseAmount={raiseAmount}\n          cakeToBurn={cakeToBurn}\n          projectSiteUrl={projectSiteUrl}\n          raisingAmount={state.raisingAmount}\n          totalAmount={state.totalAmount}\n        />\n      </CardBody>\n    </StyledIfoCard>\n  )\n}\n\nexport default IfoCard\n","import styled from 'styled-components'\nimport { Heading } from '@pancakeswap-libs/uikit'\n\nconst Title = styled(Heading).attrs({ size: 'lg' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 16px;\n`\n\nexport default Title\n","import styled from 'styled-components'\n\ninterface IfoCardWrapperProps {\n  isSingle?: boolean\n}\n\nconst IfoCardWrapper = styled.div<IfoCardWrapperProps>`\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  padding-bottom: 40px;\n  padding-top: 40px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    grid-template-columns: ${({ isSingle }) => `repeat(${isSingle ? 1 : 2}, 1fr)`};\n  }\n`\n\nIfoCardWrapper.defaultProps = {\n  isSingle: false,\n}\n\nexport default IfoCardWrapper\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, BaseLayout, Button, LinkExternal, Flex, Image } from '@pancakeswap-libs/uikit'\nimport { ifosConfig } from 'config/constants'\nimport useI18n from 'hooks/useI18n'\nimport IfoCard from './components/IfoCard'\nimport Title from './components/Title'\nimport IfoCards from './components/IfoCards'\n\nconst LaunchIfoCallout = styled(BaseLayout)`\n  border-top: 2px solid ${({ theme }) => theme.colors.textSubtle};\n  display: grid;\n  grid-template-columns: 1fr;\n  grid-gap: 32px;\n  margin: 0 auto;\n  padding: 32px 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    grid-template-columns: 1fr 1fr;\n  }\n`\n\nconst List = styled.ul`\n  color: ${({ theme }) => theme.colors.text};\n  margin-bottom: 16px;\n\n  & > li {\n    line-height: 1.4;\n    margin-bottom: 8px;\n  }\n`\n\n/**\n * Note: currently there should be only 1 active IFO at a time\n */\nconst activeIfo = ifosConfig.find((ifo) => ifo.isActive)\n\nconst Ifo = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <div>\n      <IfoCards isSingle>\n        <IfoCard ifo={activeIfo} />\n      </IfoCards>\n      <LaunchIfoCallout>\n        <div>\n          <Title as=\"h2\">{TranslateString(592, 'How to take part')}</Title>\n          <Heading mb=\"16px\">{TranslateString(594, 'Before Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(596, 'Buy CAKE and BNB tokens')}</li>\n            <li>{TranslateString(598, 'Get CAKE-BNB LP tokens by adding CAKE and BNB liquidity')}</li>\n          </List>\n          <Flex mb=\"16px\">\n            <LinkExternal href=\"https://exchange.pancakeswap.finance/#/swap\" mr=\"16px\">\n              {TranslateString(999, 'Buy Token')}\n            </LinkExternal>\n            <LinkExternal href=\"https://exchange.pancakeswap.finance/#/add/ETH/0x0E09FaBB73Bd3Ade0a17ECC321fD13a19e81cE82\">\n              {TranslateString(999, 'Get LP tokens')}\n            </LinkExternal>\n          </Flex>\n          <Heading mb=\"16px\">{TranslateString(600, 'During Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(602, 'While the sale is live, commit your CAKE-LP tokens to buy the IFO tokens')}</li>\n          </List>\n          <Heading mb=\"16px\">{TranslateString(604, 'After Sale')}:</Heading>\n          <List>\n            <li>{TranslateString(606, 'Claim the tokens you bought, along with any unspent funds.')}</li>\n            <li>{TranslateString(608, 'Done!')}</li>\n          </List>\n          { /* <Text as=\"div\" pt=\"16px\">\n            <Button\n              as=\"a\"\n              variant=\"secondary\"\n              href=\"https://docs.pancakeswap.finance/core-products/ifo-initial-farm-offering\"\n            >\n              {TranslateString(610, 'Read more')}\n            </Button>\n            </Text> */}\n        </div>\n        <div>\n\t\t{ /* <Image src=\"/images/ifo-bunny.svg\" alt=\"ifo bunny\" width={436} height={406} responsive /> */}\n          <div>\n            <Title as=\"h2\">{TranslateString(512, 'Want to launch your own IFO?')}</Title>\n            <Text mb={3}>\n              {TranslateString(\n                514,\n                'Launch your project with PancakeSwap, Binance Smart Chain’s most-used AMM project and liquidity provider, to bring your token directly to the most active and rapidly growing community on BSC.',\n              )}\n            </Text>\n            <Button\n              as=\"a\"\n              href=\"https://docs.google.com/forms/d/e/1FAIpQLScGdT5rrVMr4WOWr08pvcroSeuIOtEJf1sVdQGVdcAOqryigQ/viewform\"\n              external\n            >\n              {TranslateString(516, 'Apply to launch')}\n            </Button>\n          </div>\n        </div>\n      </LaunchIfoCallout>\n    </div>\n  )\n}\n\nexport default Ifo\n","import React from 'react'\nimport { ifosConfig } from 'config/constants'\nimport { Ifo } from 'config/constants/types'\nimport IfoCard from './components/IfoCard'\nimport IfoCards from './components/IfoCards'\n\nconst inactiveIfo: Ifo[] = ifosConfig.filter((ifo) => !ifo.isActive)\n\nconst PastIfo = () => {\n  return (\n    <IfoCards>\n      {inactiveIfo.map((ifo) => (\n        <IfoCard key={ifo.id} ifo={ifo} />\n      ))}\n    </IfoCards>\n  )\n}\n\nexport default PastIfo\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport Container from 'components/layout/Container'\nimport IfoTabButtons from './components/IfoTabButtons'\nimport Hero from './components/Hero'\nimport CurrentIfo from './CurrentIfo'\nimport PastIfo from './PastIfo'\n\nconst Ifos = () => {\n  const { path } = useRouteMatch()\n\n  return (\n    <>\n      <Hero />\n      <Container>\n        <IfoTabButtons />\n        <Route exact path={`${path}`}>\n          <CurrentIfo />\n        </Route>\n        <Route path={`${path}/history`}>\n          <PastIfo />\n        </Route>\n      </Container>\n    </>\n  )\n}\n\nexport default Ifos\n"],"sourceRoot":""}