{"version":3,"sources":["hooks/useWeb3.ts","hooks/useContract.ts","utils/formatBalance.ts","utils/callHelpers.ts","config/index.ts","components/Input/Input.tsx","hooks/useBlock.ts","config/constants/ifo.ts","config/constants/index.ts","components/UnlockButton.tsx","components/Spacer/Spacer.tsx","components/ModalActions/ModalActions.tsx","hooks/useHarvest.ts","hooks/useApprove.ts","components/TokenInput/TokenInput.tsx","components/Tags.tsx","hooks/useStake.ts","components/layout/Flex.tsx","hooks/useUnstake.ts","views/Pools/components/Card.tsx","views/Pools/components/CardTitle.tsx","views/Pools/components/Coming.tsx","components/Label/Label.tsx","components/Balance.tsx","views/Pools/components/DepositModal.tsx","views/Pools/components/WithdrawModal.tsx","views/Pools/components/CompoundModal.tsx","views/Pools/components/OldSyrupTitle.tsx","views/Pools/components/HarvestButton.tsx","views/Pools/components/CardFooter.tsx","views/Pools/components/PoolCard.tsx","views/Pools/components/PoolTabButtons/index.tsx","views/Pools/components/Divider.tsx","views/Pools/Syrup.tsx"],"names":["RPC_URL","getRpcUrl","httpProvider","Web3","providers","HttpProvider","timeout","useWeb3","ethereum","useWallet","refEth","useRef","useState","web3","setweb3","useEffect","current","useContract","abi","address","contractOptions","eth","Contract","contract","setContract","useIfoContract","ifo","useERC20","erc20","useCake","getCakeAddress","useRabbitMintingFarm","rabbitmintingfarm","usePancakeRabbits","pancakeRabbits","useLottery","lottery","getLotteryAddress","useMasterchef","masterChef","getMasterChefAddress","useSousChef","id","config","poolsConfig","find","pool","sousId","rawAbi","poolCategory","PoolCategory","BINANCE","sousChefBnb","sousChef","contractAddress","process","getBalanceNumber","balance","decimals","displayBalance","BigNumber","dividedBy","pow","toNumber","getFullDisplayBalance","toFixed","approve","lpContract","masterChefContract","account","a","methods","options","ethers","constants","MaxUint256","send","from","stake","pid","amount","deposit","times","toString","on","tx","transactionHash","sousStake","sousChefContract","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBnb","EXPONENTIAL_AT","DECIMAL_PLACES","BLOCKS_PER_YEAR","BSC_BLOCK_TIME","StyledInputWrapper","styled","div","props","theme","card","background","colors","borderColor","spacing","StyledInput","input","primary","Input","endAdornment","onChange","placeholder","startAdornment","useBlock","useContext","BlockContext","ifos","isActive","name","subTitle","description","launchDate","launchTime","saleAmount","raiseAmount","cakeToBurn","projectSiteUrl","currency","currencyAddress","tokenDecimals","releaseBlockNumber","farmsConfig","filter","farm","isCommunity","map","tokenSymbol","UnlockButton","TranslateString","useI18n","connect","reset","onPresentConnectModal","useWalletModal","onClick","StyledSpacer","size","Spacer","s","ThemeContext","StyledModalActions","primaryDark","StyledModalAction","ModalActions","children","l","React","Children","toArray","length","child","i","useHarvest","farmPid","dispatch","useDispatch","onReward","useCallback","txHash","fetchFarmUserDataAsync","useAllHarvest","farmPids","harvestPromises","reduce","accum","Promise","all","useSousHarvest","isUsingBnb","handleHarvest","updateUserPendingReward","updateUserBalance","useApprove","onApprove","useSousApprove","updateUserAllowance","useIfoApprove","tokenContract","spenderAddress","StyledTokenInput","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TokenInput","max","symbol","onSelectMax","depositFeeBP","toLocaleString","NoFeeTag","variant","outline","startIcon","CoreTag","CommunityTag","BinanceTag","useSousStake","handleStake","updateUserStakedBalance","onStake","useStake","console","info","FlexLayout","SYRUPIDS","useSousUnstake","isOldSyrup","includes","onUnstake","useUnstake","Card","isFinished","CardTitle","Balance","text","Label","textSubtle","DetailPlaceholder","Value","Footer","isDark","Coming","style","padding","role","aria-label","src","width","height","alt","as","mb","alert","flex","StyledLabel","StyledText","Text","isDisabled","color","textDisabled","fontSize","unit","previousValue","bold","start","end","duration","separator","defaultProps","DepositModal","onConfirm","onDismiss","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","useMemo","handleChange","e","currentTarget","handleSelectMax","title","fullWidth","disabled","WithdrawModal","CompoundModal","earnings","BalanceRow","Number","Title","ActionLink","OldSyrupTitle","hasBalance","href","target","StyledButton","button","undefined","StyledLink","Link","StyledExternalLink","Button","buttonSize","buttonPadding","to","buttonColor","ButtonChild","boxShadow","tags","CORE","COMMUNITY","StyledFooter","StyledDetailsButton","Details","Row","FlexFull","TokenLink","CardFooter","projectLink","totalStaked","blocksRemaining","blocksUntilStart","isOpen","setIsOpen","Icon","ChevronUp","ChevronDown","Tag","marginBottom","memo","PoolFinishedSash","StyledCardActions","BalanceAndCompound","StyledActionSpacer","StyledDetails","PoolCard","image","stakingTokenName","stakingTokenAddress","apy","startBlock","endBlock","userData","stakingLimit","isBnbPool","stakingTokenContract","block","requestedApproval","setRequestedApproval","allowance","stakingTokenBalance","stakedBalance","pendingReward","Math","QuoteToken","SYRUP","accountHasStakedBalance","needsApproval","isCardActive","convertedLimit","multipliedBy","useModal","isGreaterThan","onPresentDeposit","onPresentCompound","onPresentWithdraw","handleApprove","error","display","alignItems","HarvestButton","eq","isNaN","isFinite","PoolTabButtons","useRouteMatch","url","isExact","Wrapper","activeIndex","Hero","Farm","path","farms","useFarms","pools","usePools","bnbPriceUSD","usePriceBnbBusd","poolsWithApy","rewardTokenFarm","f","stakingTokenFarm","stakingTokenPriceInBNB","tokenPriceVsQuote","totalRewardPricePerYear","tokenPrice","quoteToken","tokenPriceBN","BUSD","priceToBnb","quoteTokenSymbol","tokenPerBlock","totalStakingTokenInPool","partition","finishedPools","openPools","Page","Divider","Flex","exact","orderBy"],"mappings":"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","file":"static/js/8.7f1c0664.chunk.js","sourcesContent":["import { useEffect, useState, useRef } from 'react'\nimport Web3 from 'web3'\nimport { HttpProviderOptions } from 'web3-core-helpers'\nimport { provider as ProviderType } from 'web3-core'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport getRpcUrl from 'utils/getRpcUrl'\n\nconst RPC_URL = getRpcUrl()\nconst httpProvider = new Web3.providers.HttpProvider(RPC_URL, { timeout: 10000 } as HttpProviderOptions)\n\n/**\n * Provides a web3 instance using the provider provided by useWallet\n * with a fallback of an httpProver\n * Recreate web3 instance only if the ethereum provider change\n */\nconst useWeb3 = () => {\n  const { ethereum }: { ethereum: ProviderType } = useWallet()\n  const refEth = useRef(ethereum)\n  const [web3, setweb3] = useState(new Web3(ethereum || httpProvider))\n\n  useEffect(() => {\n    if (ethereum !== refEth.current) {\n      setweb3(new Web3(ethereum || httpProvider))\n      refEth.current = ethereum\n    }\n  }, [ethereum])\n\n  return web3\n}\n\nexport default useWeb3\n","import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport { getMasterChefAddress, getCakeAddress, getLotteryAddress, getLotteryTicketAddress } from 'utils/addressHelpers'\nimport { poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport erc20 from 'config/abi/erc20.json'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\nimport lottery from 'config/abi/lottery.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport sousChefBnb from 'config/abi/sousChefBnb.json'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const useCake = () => {\n  return useERC20(getCakeAddress())\n}\n\nexport const useRabbitMintingFarm = (address: string) => {\n  const rabbitMintingFarmAbi = (rabbitmintingfarm as unknown) as AbiItem\n  return useContract(rabbitMintingFarmAbi, address)\n}\n\nexport const usePancakeRabbits = (address: string) => {\n  const pancakeRabbitsAbi = (pancakeRabbits as unknown) as AbiItem\n  return useContract(pancakeRabbitsAbi, address)\n}\n\nexport const useLottery = () => {\n  const abi = (lottery as unknown) as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = (lotteryTicket as unknown) as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const useSousChef = (id) => {\n  const config = poolsConfig.find((pool) => pool.sousId === id)\n  const rawAbi = config.poolCategory === PoolCategory.BINANCE ? sousChefBnb : sousChef\n  const abi = (rawAbi as unknown) as AbiItem\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\n}\n\nexport default useContract\n","import BigNumber from 'bignumber.js'\n\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\n  const displayBalance = new BigNumber(balance).dividedBy(new BigNumber(10).pow(decimals))\n  return displayBalance.toNumber()\n}\n\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18) => {\n  return balance.dividedBy(new BigNumber(10).pow(decimals)).toFixed()\n}\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0x3B9B74f48E89Ebd8b45a53444327013a2308A9BC') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xBb2B66a2c7C2fFFB06EA60BeaD69741b3f5BF831') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  return masterChefContract.methods\n    .deposit(pid, '0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n","import BigNumber from 'bignumber.js/bignumber'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nexport const CAKE_PER_BLOCK = new BigNumber(1)\nexport const BLOCKS_PER_YEAR = new BigNumber(10512000)\nexport const BSC_BLOCK_TIME = 3\n\nexport const CAKE_POOL_PID = 1\n","import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  )\n}\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background: ${(props) => props.theme.card.background};\n  border-radius: 2px;\n  border: 3px solid ${(props) => props.theme.colors.borderColor};\n  display: flex;\n  height: 72px;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledInput = styled.input`\n  width: 100%;\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`\n\nexport default Input\n","import { useContext } from 'react'\nimport { BlockContext } from 'contexts/BlockContext'\n\nconst useBlock = () => {\n  const block: number = useContext(BlockContext)\n  return block\n}\n\nexport default useBlock\n","import { Ifo } from './types'\n\nconst ifos: Ifo[] = [  \n  {\n    id: 'soteria',\n    address: '0x9C21123D94b93361a29B2C2EFB3d5CD8B17e0A9e',\n    isActive: true,\n    name: 'Soteria',\n    subTitle: 'A blockchain based mutual to share the risk of DeFi on Binance Smart Chain',\n    description:\n      'Soteria allows users to buy insurance cover to greatly diminish or reduce the financial risk of hacks. It replaces the idea of a traditional insurance company, because it is wholly owned by the members. The model encourages engagement as members receive economic incentives for participating in Risk Assessment, Claims Assessment and Governance.',\n    launchDate: 'Jan. 21',\n    launchTime: '4PM SGT',\n    saleAmount: '1,500,000 wSOTE',\n    raiseAmount: '$525,000',\n    cakeToBurn: '$262,500',\n    projectSiteUrl: 'https://soteria.finance/#/',\n    currency: 'CAKE-BNB LP',\n    currencyAddress: '0xA527a61703D82139F8a06Bc30097cC9CAA2df5A6',\n    tokenDecimals: 18,\n    releaseBlockNumber: 4086064,\n  },\n]\n\nexport default ifos\n","import farmsConfig from './farms'\n\nconst communityFarms = farmsConfig.filter((farm) => farm.isCommunity).map((farm) => farm.tokenSymbol)\n\nexport { farmsConfig, communityFarms }\nexport { default as poolsConfig } from './pools'\nexport { default as ifosConfig } from './ifo'\n","import React from 'react'\nimport { Button, useWalletModal } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useI18n from 'hooks/useI18n'\n\nconst UnlockButton = (props) => {\n  const TranslateString = useI18n()\n  const { connect, reset } = useWallet()\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n  return (\n    <Button onClick={onPresentConnectModal} {...props}>\n      {TranslateString(292, 'Unlock Wallet')}\n    </Button>\n  )\n}\n\nexport default UnlockButton\n","import React, { useContext } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\ninterface SpacerProps {\n  size?: 'sm' | 'md' | 'lg'\n}\n\nconst Spacer: React.FC<SpacerProps> = ({ size = 'md' }) => {\n  const { spacing } = useContext(ThemeContext)\n\n  let s: number\n  switch (size) {\n    case 'lg':\n      s = spacing[6]\n      break\n    case 'sm':\n      s = spacing[2]\n      break\n    case 'md':\n    default:\n      s = spacing[4]\n  }\n\n  return <StyledSpacer size={s} />\n}\n\ninterface StyledSpacerProps {\n  size: number\n}\n\nconst StyledSpacer = styled.div<StyledSpacerProps>`\n  height: ${(props) => props.size}px;\n  width: ${(props) => props.size}px;\n`\n\nexport default Spacer\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport Spacer from '../Spacer'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <>\n          <StyledModalAction>{child}</StyledModalAction>\n          {i < l - 1 && <Spacer />}\n        </>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.colors.primaryDark}00;\n  display: flex;\n  margin: 0;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledModalAction = styled.div`\n  flex: 1;\n  text-align: center;\n`\n\nexport default ModalActions\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account)\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account)\n    } else {\n      await soushHarvest(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport { updateUserAllowance, fetchFarmUserDataAsync } from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useSousChef, useLottery } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport { Button } from '@pancakeswap-libs/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value, depositFeeBP = 0 }) => {\n  const TranslateString = useI18n()\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} {TranslateString(526, 'Available')}\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      {depositFeeBP > 0 ? (\n        <StyledMaxText>\n          {TranslateString(10001, 'Deposit Fee')}: {new BigNumber(value || 0).times(depositFeeBP / 10000).toString()}{' '}\n          {symbol}\n        </StyledMaxText>\n      ) : null}\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TokenInput\n","import React from 'react'\nimport { Tag, VerifiedIcon, CommunityIcon, BinanceIcon } from '@pancakeswap-libs/uikit'\n\nconst NoFeeTag = () => (\n  <Tag variant=\"success\" outline startIcon={<VerifiedIcon />}>\n    No Fees\n  </Tag>\n)\n\nconst RiskTag = ({ risk }) => (\n  <Tag variant={risk >= 3 ? 'failure' : 'success'} outline startIcon={<VerifiedIcon />}>\n    Risk {risk}\n  </Tag>\n)\n\nconst CoreTag = () => (\n  <Tag variant=\"secondary\" outline startIcon={<VerifiedIcon />}>\n    Core\n  </Tag>\n)\n\nconst CommunityTag = () => (\n  <Tag variant=\"textSubtle\" outline startIcon={<CommunityIcon />}>\n    Community\n  </Tag>\n)\n\nconst BinanceTag = () => (\n  <Tag variant=\"binance\" outline startIcon={<BinanceIcon />}>\n    Binance\n  </Tag>\n)\n\nexport { CoreTag, CommunityTag, BinanceTag, RiskTag, NoFeeTag }\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBnb } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        await stake(masterChefContract, 0, amount, account)\n      } else if (isUsingBnb) {\n        await sousStakeBnb(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport default useStake\n","import styled from 'styled-components'\n\nconst FlexLayout = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n    min-width: 280px;\n    max-width: 31.5%;\n    width: 100%;\n    margin: 0 8px;\n    margin-bottom: 32px;\n  }\n`\n\nexport default FlexLayout\n","import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport {\n  fetchFarmUserDataAsync,\n  updateUserStakedBalance,\n  updateUserBalance,\n  updateUserPendingReward,\n} from 'state/actions'\nimport { unstake, sousUnstake, sousEmegencyUnstake } from 'utils/callHelpers'\nimport { useMasterchef, useSousChef } from './useContract'\n\nconst useUnstake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      const txHash = await unstake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nconst SYRUPIDS = [5, 6, 3, 1, 22, 23]\n\nexport const useSousUnstake = (sousId) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n  const sousChefContract = useSousChef(sousId)\n  const isOldSyrup = SYRUPIDS.includes(sousId)\n\n  const handleUnstake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        const txHash = await unstake(masterChefContract, 0, amount, account)\n        console.info(txHash)\n      } else if (isOldSyrup) {\n        const txHash = await sousEmegencyUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      } else {\n        const txHash = await sousUnstake(sousChefContract, amount, account)\n        console.info(txHash)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n      dispatch(updateUserPendingReward(sousId, account))\n    },\n    [account, dispatch, isOldSyrup, masterChefContract, sousChefContract, sousId],\n  )\n\n  return { onUnstake: handleUnstake }\n}\n\nexport default useUnstake\n","import styled from 'styled-components'\n\nconst Card = styled.div<{ isActive?: boolean; isFinished?: boolean }>`\n  background: ${(props) => props.theme.card.background};\n  box-shadow: 0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05);\n  border-radius: 32px;\n  display: flex;\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'secondary']};\n  box-shadow: ${({ isActive }) =>\n    isActive\n      ? '0px 0px 0px 1px #0098A1, 0px 0px 4px 8px rgba(31, 199, 212, 0.4);'\n      : '0px 2px 12px -8px rgba(25, 19, 38, 0.1), 0px 1px 1px rgba(25, 19, 38, 0.05)'};\n  flex-direction: column;\n  position: relative;\n`\n\nexport default Card\n","import styled from 'styled-components'\n\ninterface StyledTitleProps {\n  isFinished?: boolean\n}\n\nconst CardTitle = styled.div<StyledTitleProps>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'text']};\n  font-weight: 600;\n  font-size: 24px;\n  line-height: 1.1;\n  margin-bottom: 14px;\n`\n\nexport default CardTitle\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Image, Button } from '@pancakeswap-libs/uikit'\nimport { CommunityTag } from 'components/Tags'\nimport useI18n from 'hooks/useI18n'\nimport Card from './Card'\nimport CardTitle from './CardTitle'\n\nconst Balance = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 40px;\n  font-weight: 600;\n`\n\nconst Label = styled.div`\n  color: ${({ theme }) => theme.colors.textSubtle};\n  font-size: 14px;\n  margin-bottom: 16px;\n`\n\nconst DetailPlaceholder = styled.div`\n  display: flex;\n  font-size: 14px;\n`\nconst Value = styled.div`\n  color: ${({ theme }) => theme.colors.text};\n  font-size: 14px;\n`\n\nconst Footer = styled.div`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  padding: 24px;\n`\nconst Coming: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <div style={{ padding: '24px' }}>\n        <CardTitle>\n          {TranslateString(414, 'Your Project?')}{' '}\n          <span role=\"img\" aria-label=\"eyes\">\n            👀\n          </span>\n        </CardTitle>\n        <Image src=\"/images/bunny-question.svg\" width={64} height={64} alt=\"Your project here\" />\n        <Balance>???</Balance>\n        <Label>{TranslateString(416, 'Create a pool for your token')}</Label>\n        <Button\n          variant=\"secondary\"\n          as=\"a\"          \n          mb=\"16px\"\n\t\t  onClick={() => alert(`We'll announce soon on Telegram how to apply, stay tunned!`)}\n        >\n          {TranslateString(418, 'Apply Now')}\n        </Button>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          <Value>??</Value>\n        </DetailPlaceholder>\n        <DetailPlaceholder>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label=\"syrup\">\n              🥞{' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Value>??? ROCK</Value>\n        </DetailPlaceholder>\n      </div>\n      <Footer>\n        <CommunityTag />\n      </Footer>\n    </Card>\n  )\n}\n\nexport default Coming\n","import React from 'react'\nimport styled from 'styled-components'\n\ninterface LabelProps {\n  text?: string\n  isFinished?: boolean\n}\n\nconst Label: React.FC<LabelProps> = ({ text, isFinished = false }) => (\n  <StyledLabel isFinished={isFinished}>{text}</StyledLabel>\n)\n\nconst StyledLabel = styled.div<{ isFinished: boolean }>`\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled' : 'primary']};\n  font-size: 14px;\n`\n\nexport default Label\n","import React, { useEffect, useRef } from 'react'\nimport CountUp from 'react-countup'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap-libs/uikit'\n\ninterface TextProps {\n  isDisabled?: boolean\n  fontSize?: string\n  color?: string\n}\n\ninterface BalanceProps extends TextProps {\n  value?: number\n  decimals?: number\n  unit?: string\n}\n\nconst StyledText = styled(Text)<TextProps>`\n  color: ${({ isDisabled, color, theme }) => (isDisabled ? theme.colors.textDisabled : color)};\n`\n\nconst Balance: React.FC<BalanceProps> = ({ value, fontSize, color, decimals, isDisabled, unit }) => {\n  const previousValue = useRef(0)\n\n  useEffect(() => {\n    previousValue.current = value\n  }, [value])\n\n  return (\n    <StyledText bold color={color} fontSize={fontSize} isDisabled={isDisabled}>\n      <CountUp start={previousValue.current} end={value} decimals={decimals} duration={1} separator=\",\" />\n      {value && unit && <span>{unit}</span>}\n    </StyledText>\n  )\n}\n\nBalance.defaultProps = {\n  fontSize: '32px',\n  isDisabled: false,\n  color: 'text',\n  decimals: 3,\n}\n\nexport default Balance\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst DepositModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(316, 'Deposit')} ${tokenName} Tokens`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default DepositModal\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`Withdraw ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","import BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport React, { useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport Balance from 'components/Balance'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\n\ninterface DepositModalProps {\n  earnings: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst CompoundModal: React.FC<DepositModalProps> = ({ earnings, onConfirm, onDismiss, tokenName = '' }) => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(earnings)\n  }, [earnings])\n\n  return (\n    <Modal\n      title={`${TranslateString(999, 'Compound')} ${TranslateString(330, `${tokenName} Earned`)}`}\n      onDismiss={onDismiss}\n    >\n      <BalanceRow>\n        <Balance value={Number(fullBalance)} />\n      </BalanceRow>\n      <ModalActions>\n        <Button fullWidth variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"compound-cake\"\n          fullWidth\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(fullBalance)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default CompoundModal\n\nconst BalanceRow = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: row;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport CardTitle from './CardTitle'\n\ninterface Props {\n  hasBalance?: boolean\n}\n\nconst Title = styled.div`\n  color: #ed4b9e;\n  font-size: 24px;\n  font-weight: 600;\n  text-transform: uppercase;\n`\n\nconst ActionLink = styled.a`\n  color: #ed4b9e;\n  font-size: 14px;\n`\n\nconst OldSyrupTitle: React.FC<Props> = ({ hasBalance = false }) => {\n  if (hasBalance) {\n    return (\n      <div>\n        <Title>Action Required</Title>\n        <ActionLink\n          href=\" https://pancakeswap.medium.com/urgent-action-required-changes-to-syrup-pools-70b98d7b2541\"\n          target=\"_blank\"\n        >\n          What do I need to do?\n        </ActionLink>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <CardTitle isFinished>FINISHED</CardTitle>\n    </div>\n  )\n}\n\nexport default OldSyrupTitle\n","import React, { useContext, useMemo } from 'react'\nimport styled, { ThemeContext } from 'styled-components'\n\nimport { Link } from 'react-router-dom'\n\ninterface ButtonProps {\n  children?: React.ReactNode\n  disabled?: boolean\n  href?: string\n  onClick?: () => void\n  size?: 'sm' | 'md' | 'lg'\n  text?: string\n  to?: string\n  variant?: 'default' | 'secondary' | 'tertiary'\n}\n\nconst Button: React.FC<ButtonProps> = ({ children, disabled, href, onClick, size, text, to }) => {\n  const { colors, spacing } = useContext(ThemeContext)\n  const buttonColor = colors.background\n\n  let boxShadow: string\n  let buttonSize: number\n  let buttonPadding: number\n  let fontSize: number\n  switch (size) {\n    case 'sm':\n      buttonPadding = spacing[3]\n      buttonSize = 36\n      fontSize = 14\n      break\n    case 'lg':\n      buttonPadding = spacing[4]\n      buttonSize = 72\n      fontSize = 16\n      break\n    case 'md':\n    default:\n      buttonPadding = spacing[4]\n      buttonSize = 56\n      fontSize = 16\n  }\n\n  const ButtonChild = useMemo(() => {\n    if (to) {\n      return <StyledLink to={to}>{text}</StyledLink>\n    }\n    if (href) {\n      return (\n        <StyledExternalLink href={href} target=\"__blank\">\n          {text}\n        </StyledExternalLink>\n      )\n    }\n    return text\n  }, [href, text, to])\n\n  return (\n    <StyledButton\n      boxShadow={boxShadow}\n      color={buttonColor}\n      disabled={disabled}\n      fontSize={fontSize}\n      onClick={onClick}\n      padding={buttonPadding}\n      size={buttonSize}\n    >\n      {children}\n      {ButtonChild}\n    </StyledButton>\n  )\n}\n\ninterface StyledButtonProps {\n  boxShadow: string\n  color: string\n  disabled?: boolean\n  fontSize: number\n  padding: number\n  size: number\n}\n\nconst StyledButton = styled.button<StyledButtonProps>`\n  align-items: center;\n  background: ${(props) => (!props.disabled ? props.theme.card.background : `#ddd`)};\n  border: 0;\n  border-radius: 12px;\n  color: ${(props) => (!props.disabled ? `#32cad7` : `#acaaaf`)};\n  cursor: pointer;\n  display: flex;\n  font-size: ${(props) => props.fontSize}px;\n  font-weight: 700;\n  height: ${(props) => props.size}px;\n  justify-content: center;\n  outline: none;\n  padding-left: ${(props) => props.padding}px;\n  padding-right: ${(props) => props.padding}px;\n  pointer-events: ${(props) => (!props.disabled ? undefined : 'none')};\n  width: 100%;\n  border: 2px solid ${(props) => (!props.disabled ? `#33cbd7` : `#eee`)};\n  width: 100px;\n  height: 30px;\n  font-size: 14px;\n  padding: 0px;\n`\n\nconst StyledLink = styled(Link)`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nconst StyledExternalLink = styled.a`\n  align-items: center;\n  color: inherit;\n  display: flex;\n  flex: 1;\n  height: 56px;\n  justify-content: center;\n  margin: 0 ${(props) => -props.theme.spacing[4]}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  text-decoration: none;\n`\n\nexport default Button\n","import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { ChevronDown, ChevronUp } from 'react-feather'\nimport Balance from 'components/Balance'\nimport { CommunityTag, CoreTag, BinanceTag } from 'components/Tags'\nimport { PoolCategory } from 'config/constants/types'\n\nconst tags = {\n  [PoolCategory.BINANCE]: BinanceTag,\n  [PoolCategory.CORE]: CoreTag,\n  [PoolCategory.COMMUNITY]: CommunityTag,\n}\n\ninterface Props {\n  projectLink: string\n  totalStaked: BigNumber\n  blocksRemaining: number\n  isFinished: boolean\n  blocksUntilStart: number\n  poolCategory: PoolCategory\n}\n\nconst StyledFooter = styled.div<{ isFinished: boolean }>`\n  border-top: 1px solid ${({ theme }) => (theme.isDark ? '#524B63' : '#E9EAEB')};\n  color: ${({ isFinished, theme }) => theme.colors[isFinished ? 'textDisabled2' : 'primary2']};\n  padding: 24px;\n`\n\nconst StyledDetailsButton = styled.button`\n  align-items: center;\n  background-color: transparent;\n  border: 0;\n  color: ${(props) => props.theme.colors.primary};\n  cursor: pointer;\n  display: inline-flex;\n  font-size: 16px;\n  font-weight: 600;\n  height: 32px;\n  justify-content: center;\n  outline: 0;\n  padding: 0;\n  &:hover {\n    opacity: 0.9;\n  }\n\n  & > svg {\n    margin-left: 4px;\n  }\n`\n\nconst Details = styled.div`\n  margin-top: 24px;\n`\n\nconst Row = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst FlexFull = styled.div`\n  flex: 1;\n`\nconst Label = styled.div`\n  font-size: 14px;\n`\nconst TokenLink = styled.a`\n  font-size: 14px;\n  text-decoration: none;\n  color: #12aab5;\n`\n\nconst CardFooter: React.FC<Props> = ({\n  projectLink,\n  totalStaked,\n  blocksRemaining,\n  isFinished,\n  blocksUntilStart,\n  poolCategory,\n}) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const TranslateString = useI18n()\n  const Icon = isOpen ? ChevronUp : ChevronDown\n\n  const handleClick = () => setIsOpen(!isOpen)\n  const Tag = tags[poolCategory]\n\n  return (\n    <StyledFooter isFinished={isFinished}>\n      <Row>\n        <FlexFull>\n          <Tag />\n        </FlexFull>\n        <StyledDetailsButton onClick={handleClick}>\n          {isOpen ? 'Hide' : 'Details'} <Icon />\n        </StyledDetailsButton>\n      </Row>\n      {isOpen && (\n        <Details>\n          <Row style={{ marginBottom: '4px' }}>\n            <FlexFull>\n              <Label>\n                <span role=\"img\" aria-label=\"syrup\">\n                  🥞{' '}\n                </span>\n                {TranslateString(408, 'Total')}\n              </Label>\n            </FlexFull>\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(totalStaked)} />\n          </Row>\n          {blocksUntilStart > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'Start')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksUntilStart} decimals={0} />\n            </Row>\n          )}\n          {blocksUntilStart === 0 && blocksRemaining > 0 && (\n            <Row>\n              <FlexFull>\n                <Label>{TranslateString(410, 'End')}:</Label>\n              </FlexFull>\n              <Balance fontSize=\"14px\" isDisabled={isFinished} value={blocksRemaining} decimals={0} />\n            </Row>\n          )}\n          <TokenLink href={projectLink} target=\"_blank\">\n            {TranslateString(412, 'View project site')}\n          </TokenLink>\n        </Details>\n      )}\n    </StyledFooter>\n  )\n}\n\nexport default React.memo(CardFooter)\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, IconButton, useModal, AddIcon, Image } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport UnlockButton from 'components/UnlockButton'\nimport Label from 'components/Label'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport useI18n from 'hooks/useI18n'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useSousHarvest } from 'hooks/useHarvest'\nimport Balance from 'components/Balance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport DepositModal from './DepositModal'\nimport WithdrawModal from './WithdrawModal'\nimport CompoundModal from './CompoundModal'\nimport CardTitle from './CardTitle'\nimport Card from './Card'\nimport OldSyrupTitle from './OldSyrupTitle'\nimport HarvestButton from './HarvestButton'\nimport CardFooter from './CardFooter'\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst PoolCard: React.FC<HarvestProps> = ({ pool }) => {\n  const {\n    sousId,\n    image,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    projectLink,\n    harvest,\n    apy,\n    tokenDecimals,\n    poolCategory,\n    totalStaked,\n    startBlock,\n    endBlock,\n    isFinished,\n    userData,\n    stakingLimit,\n  } = pool\n  // Pools using native BNB behave differently than pools using a token\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const TranslateString = useI18n()\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n  const { account } = useWallet()\n  const block = useBlock()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId)\n  const { onReward } = useSousHarvest(sousId, isBnbPool)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const stakedBalance = new BigNumber(userData?.stakedBalance || 0)\n  const earnings = new BigNumber(userData?.pendingReward || 0)\n\n  const blocksUntilStart = Math.max(startBlock - block, 0)\n  const blocksRemaining = Math.max(endBlock - block, 0)\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP\n  const accountHasStakedBalance = stakedBalance?.toNumber() > 0\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool\n  const isCardActive = isFinished && accountHasStakedBalance\n\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  const [onPresentCompound] = useModal(\n    <CompoundModal earnings={earnings} onConfirm={onStake} tokenName={stakingTokenName} />,\n  )\n\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={stakedBalance} onConfirm={onUnstake} tokenName={stakingTokenName} />,\n  )\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <Card isActive={isCardActive} isFinished={isFinished && sousId !== 0}>\n      {isFinished && sousId !== 0 && <PoolFinishedSash />}\n      <div style={{ padding: '24px' }}>\n        <CardTitle isFinished={isFinished && sousId !== 0}>\n          {isOldSyrup && '[OLD]'} {tokenName} {TranslateString(348, 'Pool')}\n        </CardTitle>\n        <div style={{ marginBottom: '8px', display: 'flex', alignItems: 'center' }}>\n          <div style={{ flex: 1 }}>\n            <Image src={`/images/tokens/${image || tokenName}.png`} width={64} height={64} alt={tokenName} />\n          </div>\n          {account && harvest && !isOldSyrup && (\n            <HarvestButton\n              disabled={!earnings.toNumber() || pendingTx}\n              text={pendingTx ? 'Collecting' : 'Harvest'}\n              onClick={async () => {\n                setPendingTx(true)\n                await onReward()\n                setPendingTx(false)\n              }}\n            />\n          )}\n        </div>\n        {!isOldSyrup ? (\n          <BalanceAndCompound>\n            <Balance value={getBalanceNumber(earnings, tokenDecimals)} isDisabled={isFinished} />\n            {sousId === 0 && account && harvest && (\n              <HarvestButton\n                disabled={!earnings.toNumber() || pendingTx}\n                text={pendingTx ? TranslateString(999, 'Compounding') : TranslateString(999, 'Compound')}\n                onClick={onPresentCompound}\n              />\n            )}\n          </BalanceAndCompound>\n        ) : (\n          <OldSyrupTitle hasBalance={accountHasStakedBalance} />\n        )}\n        <Label isFinished={isFinished && sousId !== 0} text={TranslateString(330, `${tokenName} earned`)} />\n        <StyledCardActions>\n          {!account && <UnlockButton />}\n          {account &&\n            (needsApproval && !isOldSyrup ? (\n              <div style={{ flex: 1 }}>\n                <Button disabled={isFinished || requestedApproval} onClick={handleApprove} fullWidth>\n                  {`Approve ${stakingTokenName}`}\n                </Button>\n              </div>\n            ) : (\n              <>\n                <Button\n                  disabled={stakedBalance.eq(new BigNumber(0)) || pendingTx}\n                  onClick={\n                    isOldSyrup\n                      ? async () => {\n                          setPendingTx(true)\n                          await onUnstake('0')\n                          setPendingTx(false)\n                        }\n                      : onPresentWithdraw\n                  }\n                >\n                  {`Unstake ${stakingTokenName}`}\n                </Button>\n                <StyledActionSpacer />\n                {!isOldSyrup && (\n                  <IconButton disabled={isFinished && sousId !== 0} onClick={onPresentDeposit}>\n                    <AddIcon color=\"background\" />\n                  </IconButton>\n                )}\n              </>\n            ))}\n        </StyledCardActions>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>{TranslateString(736, 'APR')}:</div>\n          {isFinished || isOldSyrup || !apy || apy?.isNaN() || !apy?.isFinite() ? (\n            '-'\n          ) : (\n            <Balance fontSize=\"14px\" isDisabled={isFinished} value={apy?.toNumber()} decimals={2} unit=\"%\" />\n          )}\n        </StyledDetails>\n        <StyledDetails>\n          <div style={{ flex: 1 }}>\n            <span role=\"img\" aria-label={stakingTokenName}>\n              🥞{' '}\n            </span>\n            {TranslateString(384, 'Your Stake')}:\n          </div>\n          <Balance fontSize=\"14px\" isDisabled={isFinished} value={getBalanceNumber(stakedBalance)} />\n        </StyledDetails>\n      </div>\n      <CardFooter\n        projectLink={projectLink}\n        totalStaked={totalStaked}\n        blocksRemaining={blocksRemaining}\n        isFinished={isFinished}\n        blocksUntilStart={blocksUntilStart}\n        poolCategory={poolCategory}\n      />\n    </Card>\n  )\n}\n\nconst PoolFinishedSash = styled.div`\n  background-image: url('/images/pool-finished-sash.svg');\n  background-position: top right;\n  background-repeat: not-repeat;\n  height: 135px;\n  position: absolute;\n  right: -24px;\n  top: -24px;\n  width: 135px;\n`\n\nconst StyledCardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: 16px 0;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n`\n\nconst StyledActionSpacer = styled.div`\n  height: ${(props) => props.theme.spacing[4]}px;\n  width: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst StyledDetails = styled.div`\n  display: flex;\n  font-size: 14px;\n`\n\nexport default PoolCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useRouteMatch, Link } from 'react-router-dom'\nimport { ButtonMenu, ButtonMenuItem } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst PoolTabButtons = () => {\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <ButtonMenu activeIndex={!isExact ? 1 : 0} size=\"sm\" variant=\"subtle\">\n        <ButtonMenuItem as={Link} to={`${url}`}>\n          {TranslateString(999, 'Active')}\n        </ButtonMenuItem>\n        <ButtonMenuItem as={Link} to={`${url}/history`}>\n          {TranslateString(999, 'Inactive')}\n        </ButtonMenuItem>\n      </ButtonMenu>\n    </Wrapper>\n  )\n}\n\nexport default PoolTabButtons\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 32px;\n`\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import React from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useFarms, usePriceBnbBusd, usePools } from 'state/hooks'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\nimport PoolTabButtons from './components/PoolTabButtons'\nimport Divider from './components/Divider'\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const farms = useFarms()\n  const pools = usePools(account)\n  const bnbPriceUSD = usePriceBnbBusd()\n  const block = useBlock()\n\n  const priceToBnb = (tokenName: string, tokenPrice: BigNumber, quoteToken: QuoteToken): BigNumber => {\n    const tokenPriceBN = new BigNumber(tokenPrice)\n    if (tokenName === 'BNB') {\n      return new BigNumber(1)\n    }\n    if (tokenPrice && quoteToken === QuoteToken.BUSD) {\n      return tokenPriceBN.div(bnbPriceUSD)\n    }\n    return tokenPriceBN\n  }\n\n  const poolsWithApy = pools.map((pool) => {\n    const isBnbPool = pool.poolCategory === PoolCategory.BINANCE\n    const rewardTokenFarm = farms.find((f) => f.tokenSymbol === pool.tokenName)\n    const stakingTokenFarm = farms.find((s) => s.tokenSymbol === pool.stakingTokenName)\n\n    // /!\\ Assume that the farm quote price is BNB\n    const stakingTokenPriceInBNB = isBnbPool ? new BigNumber(1) : new BigNumber(stakingTokenFarm?.tokenPriceVsQuote)\n    const rewardTokenPriceInBNB = priceToBnb(\n      pool.tokenName,\n      rewardTokenFarm?.tokenPriceVsQuote,\n      rewardTokenFarm?.quoteTokenSymbol,\n    )\n\n    const totalRewardPricePerYear = rewardTokenPriceInBNB.times(pool.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    const apy = totalRewardPricePerYear.div(totalStakingTokenInPool).times(100)\n\n    return {\n      ...pool,\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apy,\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n\n  return (\n    <Page>\n      <Hero>\n        <div>\n          <Heading as=\"h1\" size=\"xxl\" mb=\"16px\">\n            {TranslateString(282, 'LaunchPool')}\n          </Heading>\n          <ul>\n            <li>{TranslateString(580, 'Stake ROCK to earn new tokens.')}</li>\n            <li>{TranslateString(404, 'You can unstake at any time.')}</li>\n            <li>{TranslateString(406, 'Rewards are calculated per block.')}</li>\n          </ul>\n        </div>\n        <img src=\"/images/syrup.png\" alt=\"SYRUP POOL icon\" width={410} height={191} />\n      </Hero>\n      <PoolTabButtons />\n      <Divider />\n      <FlexLayout>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n            <Coming />\n          </>\n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexLayout>\n    </Page>\n  )\n}\n\nconst Hero = styled.div`\n  align-items: center;\n  color: ${({ theme }) => theme.colors.primary};\n  display: grid;\n  grid-gap: 32px;\n  grid-template-columns: 1fr;\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 250px;\n  padding: 48px 0;\n  ul {\n    margin: 0;\n    padding: 0;\n    list-style-type: none;\n    font-size: 16px;\n    li {\n      margin-bottom: 4px;\n    }\n  }\n  img {\n    height: auto;\n    max-width: 100%;\n  }\n  @media (min-width: 576px) {\n    grid-template-columns: 1fr 1fr;\n    margin: 0;\n    max-width: none;\n  }\n`\n\nexport default Farm\n"],"sourceRoot":""}