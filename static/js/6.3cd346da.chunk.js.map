{"version":3,"sources":["utils/erc20.ts","hooks/useTokenBalance.ts","utils/getTimePeriods.ts","components/ExpandableSectionButton/ExpandableSectionButton.tsx","hooks/useAllowance.ts","contexts/PastLotteryDataContext.tsx","utils/lotteryUtils.js","hooks/useGetLotteryHasDrawn.ts","hooks/useTimer.ts","views/Lottery/helpers/CountdownHelpers.ts","views/Lottery/components/LotteryProgress.tsx","views/Lottery/components/Hero.tsx","views/Lottery/components/Divider.tsx","hooks/useTickets.ts","views/Lottery/components/Loading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","hooks/useBuyLottery.ts","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","components/TicketInput/TicketInput.tsx","views/Lottery/components/TicketCard/BuyTicketModal.tsx","views/Lottery/components/TicketCard/PurchaseWarningModal.tsx","views/Lottery/components/TicketCard/TicketActions.tsx","views/Lottery/components/TicketCard/index.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/components/TotalPrizesCard/index.tsx","views/Lottery/components/WinningNumbers.tsx","views/Lottery/components/HowItWorks.tsx","views/Lottery/NextDrawPage.tsx","utils/getLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx"],"names":["getContract","provider","address","Web3","eth","Contract","erc20","getAllowance","lpContract","masterChefContract","account","a","methods","allowance","options","call","getTokenBalance","tokenAddress","userAddress","contract","balanceOf","balance","useTotalSupply","slowRefresh","useRefresh","useState","totalSupply","setTotalSupply","useEffect","cakeContract","cakeABI","getCakeAddress","supply","BigNumber","fetchTotalSupply","useBurnedBalance","setBalance","bal","fetchBalance","useTokenBalance","useWallet","ethereum","fastRefresh","res","HOUR_IN_SECONDS","DAY_IN_SECONDS","MONTH_IN_SECONDS","YEAR_IN_SECONDS","getTimePeriods","seconds","delta","timeLeft","years","months","days","hours","minutes","Math","floor","Wrapper","styled","div","theme","colors","primary","ExpandableSectionButton","onClick","expanded","aria-label","role","color","bold","defaultProps","useLotteryAllowance","setAllowance","lotteryContract","useLottery","useCake","fetchAllowance","refreshInterval","setInterval","clearInterval","useIfoAllowance","tokenContract","spenderAddress","dependency","fetch","React","createContext","mostRecentLotteryNumber","historyError","historyData","multiCall","abi","calls","web3","getWeb3","multi","MultiCallAbi","getMulticallAddress","itf","Interface","length","i","newCalls","slice","calldata","map","toLowerCase","encodeFunctionData","aggregate","returnData","concat","index","decodeFunctionResult","multiBuy","price","numbersList","times","pow","toString","send","from","on","tx","transactionHash","console","error","getTickets","ticketsContract","customLotteryNum","issueIndex","issueIdex","getTicketsAmount","calls1","Array","apply","ticketAbi","tokenIds","id","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","push","calls3","tickets","getLotteryStatus","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","rewards","finanltokenIds","r","getTotalClaim","drawed","calls4","claim","reduce","p","c","sum","getTotalRewards","getMax","maxNumber","getLotteryIssueIndex","getMatchingRewardLength","matchNumber","historyAmount","amount","getWinningNumbers","numbers","parseInt","historyNumbers","winningNumbers","useGetLotteryHasDrawn","lotteryHasDrawn","setLotteryHasDrawn","state","fetchLotteryStatus","useCurrentTime","Date","getTime","currentMillis","setCurrentMillis","timerID","prevMillis","lotteryDrawHoursUtc","getNextLotteryDrawTime","millisTimeOfNextDraw","date","currentHour","getUTCHours","nextLotteryHour","getClosestLotteryHour","tomorrow","nextDay","getUTCDate","setUTCDate","setUTCHours","hoursAndMinutesString","getTicketSaleTime","msUntilNextTicketSale","getNextTicketSaleTime","getLotteryDrawStep","ProgressWrapper","TopTextWrapper","BottomTextWrapper","StyledPrimaryText","Text","LotteryProgress","TranslateString","useI18n","timeUntilTicketSale","timeUntilLotteryDraw","msUntilLotteryDraw","getLotteryDrawTime","primaryStep","secondaryStep","showProgressBunny","fontSize","Title","Heading","attrs","as","size","secondary","Blurb","StyledHero","StyledContainer","Container","mediaQueries","sm","LeftWrapper","lg","RightWrapper","Hero","textSubtle","useTotalClaim","claimAmount","setClaimAmount","claimLoading","setClaimLoading","useLotteryTicket","useCallback","useWinningNumbers","winngNumbers","setWinningNumbers","useMatchingRewardLength","matchingNumbers","setMatchingNumbers","matchedNumbaers","useTickets","lotteryNumber","setTickets","StyledLoading","Loading","RewardP","TicketsList","props","StyledButton","Button","spacing","UserTicketsModal","myTicketNumbers","onDismiss","winNumbers","rewardMatch","number","n","listItems","emoji","join","title","variant","WinningsWrapper","IconWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","requestedClaim","setRequestedClaim","onMultiClaim","lotteryTicketContract","txHash","useMultiClaimLottery","useModal","onPresentMyTickets","handleClaim","winnings","getBalanceNumber","toFixed","style","marginRight","disabled","TextWrapper","StyledText","Image","img","md","NoPrizesContent","src","alt","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledCardBody","CardBody","StyledHeading","UnlockWalletCard","UnlockButton","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","StyledTokenSymbol","span","TicketInput","max","symbol","availableSymbol","onChange","onSelectMax","value","Input","endAdornment","placeholder","toLocaleString","BuyTicketModal","val","setVal","pendingTx","setPendingTx","setRequestedBuy","fullBalance","useMemo","getFullDisplayBalance","maxTickets","onMultiBuy","useMultiBuyLottery","setMax","fetchMax","useMaxNumber","handleBuy","random","handleSelectMax","Number","e","currentTarget","Tips","Announce","Final","ModalActions","WarningModal","CardActions","TicketCard","requestedApproval","setRequestedApproval","onApprove","useLotteryApprove","cakeBalance","ticketsLength","PurchaseWarningModal","onPresentApprove","tokenName","onPresentBuy","handleApprove","toNumber","isSecondCard","CardHeader","TicketCountWrapper","TicketActions","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","threeMatchesAmount","twoMatchesAmount","burnAmount","CardHeading","Right","Left","PrizeCountWrapper","ExpandingWrapper","showFooter","TotalPrizesCard","setShowFooter","setRewards","useTotalRewards","lotteryPrizeWithCommaSeparators","currentLotteryNumber","useContext","PastLotteryDataContext","mb","alignItems","justifyContent","height","width","fontWeight","Link","Row","RabbitRow","RabbitRowSmall","CardImage","CardImageFirst","RowNoPadding","Column","CenteredText","CenteredTextWithPadding","TicketNumberBox","RabbitBox","RabbitBoxSmall","StyledCardHeader","CardWrapper","WinningNumbers","MatchedNumber4","MatchedNumber3","MatchedNumber2","responsive","marginLeft","href","target","LayoutWrapper","StyledImage","StyledLink","HowItWorks","Cards","BaseLayout","SecondCardColumnWrapper","NextDrawPage","getLotteryRoundData","response","json","data","Error","SearchWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","type","isWarning","PastRoundCardError","message","_objectWithoutProperties","source","excluded","key","sourceKeys","Object","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","LotteryCardHeading","valueToDisplay","children","Icon","flexDirection","ExternalLinkWrap","LinkExternal","contractLink","formatLotteryDate","lotteryDate","dateString","toDateString","monthAndDay","split","splice","Timestamp","timeValue","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match2Ticket","match3Ticket","poolSize","TicketRound","LogoRoundIcon","PastLotteryActions","PastRoundCard","useGetRecentLotteryRoundData","isLoading","setIsLoading","setData","setError","roundData","fetchRecentLotteryData","PastLotteryRoundViewer","isInitialized","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","InnerWrapper","HistoryChart","getDataArray","kind","dataPoint","reverse","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","legend","scales","yAxes","position","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","PastDrawsHistoryCard","BunnyImageWrapper","PastDrawsPage","Lottery","activeIndex","setActiveIndex","setHistoryData","setHistoryError","setCurrentLotteryNumber","setMostRecentLotteryNumber","previousLotteryNumber","getInitialLotteryIndex","Page","onItemClick","scale","Divider","Provider"],"mappings":"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","file":"static/js/6.3cd346da.chunk.js","sourcesContent":["import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n","const MINUTE_IN_SECONDS = 60\nconst HOUR_IN_SECONDS = 3600\nconst DAY_IN_SECONDS = 86400\nconst MONTH_IN_SECONDS = 2629800\nconst YEAR_IN_SECONDS = 31557600\n\n/**\n * Format number of seconds into year, month, day, hour, minute, seconds\n *\n * @param seconds\n */\nconst getTimePeriods = (seconds: number) => {\n  let delta = seconds\n  const timeLeft = {\n    years: 0,\n    months: 0,\n    days: 0,\n    hours: 0,\n    minutes: 0,\n    seconds: 0,\n  }\n\n  if (delta >= YEAR_IN_SECONDS) {\n    timeLeft.years = Math.floor(delta / YEAR_IN_SECONDS)\n    delta -= timeLeft.years * YEAR_IN_SECONDS\n  }\n\n  if (delta >= MONTH_IN_SECONDS) {\n    timeLeft.months = Math.floor(delta / MONTH_IN_SECONDS)\n    delta -= timeLeft.months * MONTH_IN_SECONDS\n  }\n\n  if (delta >= DAY_IN_SECONDS) {\n    timeLeft.days = Math.floor(delta / DAY_IN_SECONDS)\n    delta -= timeLeft.days * DAY_IN_SECONDS\n  }\n\n  if (delta >= HOUR_IN_SECONDS) {\n    timeLeft.hours = Math.floor(delta / HOUR_IN_SECONDS)\n    delta -= timeLeft.hours * HOUR_IN_SECONDS\n  }\n\n  if (delta >= MINUTE_IN_SECONDS) {\n    timeLeft.minutes = Math.floor(delta / MINUTE_IN_SECONDS)\n    delta -= timeLeft.minutes * MINUTE_IN_SECONDS\n  }\n\n  timeLeft.seconds = delta\n\n  return timeLeft\n}\n\nexport default getTimePeriods\n","import React from 'react'\nimport styled from 'styled-components'\nimport { ChevronDownIcon, ChevronUpIcon, Text } from '@blzd-dev/uikit'\n\nexport interface ExpandableSectionButtonProps {\n  onClick?: () => void\n  expanded?: boolean\n}\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n\n  svg {\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\nconst ExpandableSectionButton: React.FC<ExpandableSectionButtonProps> = ({ onClick, expanded }) => {\n  return (\n    <Wrapper aria-label=\"Hide or show expandable content\" role=\"button\" onClick={() => onClick()}>\n      <Text color=\"primary\" bold>\n        {expanded ? 'Hide' : 'Details'}\n      </Text>\n      {expanded ? <ChevronUpIcon /> : <ChevronDownIcon />}\n    </Wrapper>\n  )\n}\n\nExpandableSectionButton.defaultProps = {\n  expanded: false,\n}\n\nexport default ExpandableSectionButton\n","import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { useCake, useLottery } from './useContract'\nimport { getAllowance } from '../utils/erc20'\n\n// Retrieve lottery allowance\nexport const useLotteryAllowance = () => {\n  const [allowance, setAllowance] = useState(new BigNumber(0))\n  const { account }: { account: string } = useWallet()\n  const lotteryContract = useLottery()\n  const cakeContract = useCake()\n\n  useEffect(() => {\n    const fetchAllowance = async () => {\n      const res = await getAllowance(cakeContract, lotteryContract, account)\n      setAllowance(new BigNumber(res))\n    }\n\n    if (account && cakeContract && cakeContract) {\n      fetchAllowance()\n    }\n    const refreshInterval = setInterval(fetchAllowance, 10000)\n    return () => clearInterval(refreshInterval)\n  }, [account, cakeContract, lotteryContract])\n\n  return allowance\n}\n\n// Retrieve IFO allowance\nexport const useIfoAllowance = (tokenContract: Contract, spenderAddress: string, dependency?: any) => {\n  const { account }: { account: string } = useWallet()\n  const [allowance, setAllowance] = useState(null)\n\n  useEffect(() => {\n    const fetch = async () => {\n      try {\n        const res = await tokenContract.methods.allowance(account, spenderAddress).call()\n        setAllowance(new BigNumber(res))\n      } catch (e) {\n        setAllowance(null)\n      }\n    }\n    fetch()\n  }, [account, spenderAddress, tokenContract, dependency])\n\n  return allowance\n}\n","import React from 'react'\n\nexport interface PastLotteryDataState {\n  mostRecentLotteryNumber: number\n  currentLotteryNumber: number\n  historyError: boolean\n  historyData: Array<any>\n}\n\nexport default React.createContext({\n  mostRecentLotteryNumber: 0,\n  historyError: false,\n  historyData: [],\n} as PastLotteryDataState)\n","/* eslint-disable no-await-in-loop */\nimport BigNumber from 'bignumber.js'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3 } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport ticketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { getMulticallAddress } from './addressHelpers'\n\nexport const multiCall = async (abi, calls) => {\n  const web3 = getWeb3()\n  const multi = new web3.eth.Contract(MultiCallAbi, getMulticallAddress())\n  const itf = new Interface(abi)\n  let res = []\n  if (calls.length > 100) {\n    let i = 0\n    while (i < calls.length / 100) {\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n      const { returnData } = await multi.methods.aggregate(calldata).call()\n      i++\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\n    }\n  } else {\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\n  }\n  return res\n}\n\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\n  try {\n    return lotteryContract.methods\n      .multiBuy(new BigNumber(price).times(new BigNumber(10).pow(18)).toString(), numbersList)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\n  const issueIdex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\n  const length = await getTicketsAmount(ticketsContract, account)\n\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n  const ticketIssues = await multiCall(ticketAbi, calls2)\n\n  const finalTokenids = []\n  ticketIssues.forEach(async (ticketIssue, i) => {\n    if (ticketIssue.toString() === issueIdex) {\n      finalTokenids.push(tokenIds[i])\n    }\n  })\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\n  const tickets = await multiCall(ticketAbi, calls3)\n\n  await getLotteryStatus(lotteryContract)\n  return tickets\n}\n\nexport const getTicketsAmount = async (ticketsContract, account) => {\n  return ticketsContract.methods.balanceOf(account).call()\n}\n\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\n  await lotteryContract.methods.issueIndex().call()\n  const length = await getTicketsAmount(ticketsContract, account)\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length }).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n  const claimedStatus = await multiCall(ticketAbi, calls2)\n\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\n\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n  const rewards = await multiCall(lotteryAbi, calls3)\n\n  let finanltokenIds = []\n  rewards.forEach((r, i) => {\n    if (r > 0) {\n      finanltokenIds.push(unClaimedIds[i])\n    }\n  })\n\n  if (finanltokenIds.length > 200) {\n    finanltokenIds = finanltokenIds.slice(0, 200)\n  }\n\n  try {\n    return lotteryContract.methods\n      .multiClaim(finanltokenIds)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\n  try {\n    const issueIdex = await lotteryContract.methods.issueIndex().call()\n    const length = await getTicketsAmount(ticketsContract, account)\n    // eslint-disable-next-line prefer-spread\n    const calls1 = Array.apply(null, { length }).map((a, i) => [\n      ticketsContract.options.address,\n      'tokenOfOwnerByIndex',\n      [account, i],\n    ])\n    const res = await multiCall(ticketAbi, calls1)\n    const tokenIds = res.map((id) => id.toString())\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n    const ticketIssues = await multiCall(ticketAbi, calls2)\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n    const claimedStatus = await multiCall(ticketAbi, calls3)\n\n    const drawed = await getLotteryStatus(lotteryContract)\n\n    const finalTokenids = []\n    ticketIssues.forEach(async (ticketIssue, i) => {\n      // eslint-disable-next-line no-empty\n      if (!drawed && ticketIssue.toString() === issueIdex) {\n      } else if (!claimedStatus[i][0]) {\n        finalTokenids.push(tokenIds[i])\n      }\n    })\n\n    const calls4 = finalTokenids.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n\n    const rewards = await multiCall(lotteryAbi, calls4)\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BigNumber(0))\n\n    return claim\n  } catch (err) {\n    console.error(err)\n  }\n  return BigNumber(0)\n}\n\nexport const getTotalRewards = async (lotteryContract) => {\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\n  return lotteryContract.methods.getTotalRewards(issueIdex).call()\n}\n\nexport const getMax = async (lotteryContract) => {\n  return lotteryContract.methods.maxNumber().call()\n}\n\nexport const getLotteryIssueIndex = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return issueIndex\n}\n\nexport const getLotteryStatus = async (lotteryContract) => {\n  return lotteryContract.methods.drawed().call()\n}\n\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\n  let issueIdex = await lotteryContract.methods.issueIndex().call()\n  const drawed = await lotteryContract.methods.drawed().call()\n  if (!drawed) {\n    issueIdex -= 1\n  }\n  try {\n    const amount = await lotteryContract.methods.historyAmount(issueIdex, 5 - matchNumber).call()\n    return amount / 1e18 / 10\n  } catch (err) {\n    console.error(err)\n  }\n  return 0\n}\n\nexport const getWinningNumbers = async (lotteryContract) => {\n  const issueIdex = await lotteryContract.methods.issueIndex().call()\n  const numbers = []\n  const drawed = await lotteryContract.methods.drawed().call()\n\n  if (!drawed && parseInt(issueIdex, 10) === 0) {\n    return [0, 0, 0, 0]\n  }\n  if (!drawed) {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIdex - 1, i).call()).toString())\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\n    }\n  }\n  return numbers\n}\n","import { useEffect, useState } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useLottery } from 'hooks/useContract'\nimport { getLotteryStatus } from 'utils/lotteryUtils'\n\n/**\n * Returns whether or not the current lottery has drawn numbers\n *\n * @return {Boolean}\n */\nconst useGetLotteryHasDrawn = () => {\n  const [lotteryHasDrawn, setLotteryHasDrawn] = useState(true)\n  const { account } = useWallet()\n  const lotteryContract = useLottery()\n\n  useEffect(() => {\n    if (account && lotteryContract) {\n      const fetchLotteryStatus = async () => {\n        const state = await getLotteryStatus(lotteryContract)\n        setLotteryHasDrawn(state)\n      }\n\n      fetchLotteryStatus()\n    }\n  }, [account, lotteryContract])\n\n  return lotteryHasDrawn\n}\n\nexport default useGetLotteryHasDrawn\n","import { useState, useEffect } from 'react'\n\nexport const useCurrentTime = () => {\n  const [currentMillis, setCurrentMillis] = useState(new Date().getTime())\n\n  useEffect(() => {\n    const tick = () => {\n      setCurrentMillis((prevMillis) => prevMillis + 1000)\n    }\n\n    const timerID = setInterval(() => tick(), 1000)\n\n    return () => clearInterval(timerID)\n  }, [])\n\n  return currentMillis\n}\n\nexport default useCurrentTime\n","import getTimePeriods from 'utils/getTimePeriods'\n\n// lottery draws UTC: 02:00 (10:00 SGT), 14:00 (22:00 SGT)\nconst lotteryDrawHoursUtc = [2, 14]\n\nconst getClosestLotteryHour = (currentHour) => {\n  switch (true) {\n    case currentHour < lotteryDrawHoursUtc[0] || currentHour >= lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[0]\n    case currentHour < lotteryDrawHoursUtc[1]:\n      return lotteryDrawHoursUtc[1]\n    default:\n      return 0\n  }\n}\n\nconst getNextLotteryDrawTime = (currentMillis) => {\n  const date = new Date(currentMillis)\n  const currentHour = date.getUTCHours()\n  const nextLotteryHour = getClosestLotteryHour(currentHour)\n  // next lottery is tomorrow if the next lottery is at 2am UTC...\n  // ...and current time is between 02:00am & 23:59pm UTC\n  const nextLotteryIsTomorrow = nextLotteryHour === 2 && currentHour >= 2 && currentHour <= 23\n  let millisTimeOfNextDraw\n\n  if (nextLotteryIsTomorrow) {\n    const tomorrow = new Date(currentMillis)\n    const nextDay = tomorrow.getUTCDate() + 1\n    tomorrow.setUTCDate(nextDay)\n    millisTimeOfNextDraw = tomorrow.setUTCHours(nextLotteryHour, 0, 0, 0)\n  } else {\n    millisTimeOfNextDraw = date.setUTCHours(nextLotteryHour, 0, 0, 0)\n  }\n\n  return millisTimeOfNextDraw\n}\n\n// @ts-ignore\nconst getNextTicketSaleTime = (currentMillis) => (parseInt(currentMillis / 3600000) + 1) * 3600000\nconst hoursAndMinutesString = (hours, minutes) => `${parseInt(hours)}h, ${parseInt(minutes)}m`\n\nexport const getTicketSaleTime = (currentMillis): string => {\n  const nextTicketSaleTime = getNextTicketSaleTime(currentMillis)\n  const msUntilNextTicketSale = nextTicketSaleTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilNextTicketSale / 1000)\n  const { hours } = getTimePeriods(msUntilNextTicketSale / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getLotteryDrawTime = (currentMillis): string => {\n  const nextLotteryDrawTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = nextLotteryDrawTime - currentMillis\n  const { minutes } = getTimePeriods(msUntilLotteryDraw / 1000)\n  const { hours } = getTimePeriods(msUntilLotteryDraw / 1000)\n  return hoursAndMinutesString(hours, minutes)\n}\n\nexport const getTicketSaleStep = () => (1 / 12) * 100\n\nexport const getLotteryDrawStep = (currentMillis) => {\n  const msBetweenLotteries = 43200000\n  const endTime = getNextLotteryDrawTime(currentMillis)\n  const msUntilLotteryDraw = endTime - currentMillis\n  const percentageRemaining = (msUntilLotteryDraw / msBetweenLotteries) * 100\n  return 100 - percentageRemaining\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Progress } from '@blzd-dev/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport {\n  getLotteryDrawTime,\n  getLotteryDrawStep,\n  getTicketSaleTime,\n  getTicketSaleStep,\n} from '../helpers/CountdownHelpers'\n\nconst ProgressWrapper = styled.div`\n  display: block;\n  width: 100%;\n`\n\nconst TopTextWrapper = styled.div`\n  margin-top: 16px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst BottomTextWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  text-align: center;\n`\n\nconst StyledPrimaryText = styled(Text)`\n  margin-right: 16px;\n`\nconst LotteryProgress = () => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = getTicketSaleTime(currentMillis)\n  const timeUntilLotteryDraw = getLotteryDrawTime(currentMillis)\n\n  return (\n    <ProgressWrapper>\n      <Progress primaryStep={getLotteryDrawStep(currentMillis)} secondaryStep={getTicketSaleStep()} showProgressBunny />\n      <TopTextWrapper>\n        <StyledPrimaryText fontSize=\"20px\" bold color=\"contrast\">\n          {lotteryHasDrawn ? timeUntilTicketSale : timeUntilLotteryDraw}\n        </StyledPrimaryText>\n        <Text fontSize=\"20px\" bold color=\"invertedContrast\">\n          {lotteryHasDrawn ? TranslateString(0, 'Until ticket sale') : TranslateString(0, 'Until lottery draw')}\n        </Text>\n      </TopTextWrapper>\n      {lotteryHasDrawn && (\n        <BottomTextWrapper>\n          <Text color=\"invertedContrast\">\n            {timeUntilLotteryDraw} {TranslateString(0, 'Until lottery draw')}\n          </Text>\n        </BottomTextWrapper>\n      )}\n    </ProgressWrapper>\n  )\n}\n\nexport default LotteryProgress\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text } from '@blzd-dev/uikit'\nimport useI18n from 'hooks/useI18n'\nimport Container from 'components/layout/Container'\nimport LotteryProgress from './LotteryProgress'\n\nconst Title = styled(Heading).attrs({ as: 'h1', size: 'xl' })`\n  color: ${({ theme }) => theme.colors.secondary};\n  margin-bottom: 24px;\n`\n\nconst Blurb = styled(Text)`\n  color: #ffffff;\n  font-size: 20px;\n  font-weight: 600;\n`\n\nconst StyledHero = styled.div`\n  background-image: linear-gradient(180deg, #53dee9 0%, #1fc7d4 100%);\n  padding-bottom: 40px;\n  padding-top: 40px;\n`\n\nconst StyledContainer = styled(Container)`\n  display: flex;\n\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst LeftWrapper = styled.div`\n  flex: 1;\n  padding-right: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-right: 32px;\n  }\n`\n\nconst RightWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  padding-left: 0;\n  margin-top: 16px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    padding-left: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 32px;\n  }\n`\n\nconst Hero = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledHero>\n      <StyledContainer>\n        <LeftWrapper>\n          <Title>{TranslateString(999, 'The CAKE Lottery')}</Title>\n          <Blurb>{TranslateString(999, 'Buy tickets with CAKE')}</Blurb>\n          <Blurb>{TranslateString(999, 'Win if 2, 3, or 4 of your ticket numbers match!')}</Blurb>\n        </LeftWrapper>\n        <RightWrapper>\n          <LotteryProgress />\n        </RightWrapper>\n      </StyledContainer>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","import styled from 'styled-components'\n\nexport default styled.div`\n  background-color: ${({ theme }) => theme.colors.textSubtle};\n  height: 1px;\n  margin: 0 auto 32px;\n  width: 100%;\n`\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport BigNumber from 'bignumber.js'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWallet()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(new BigNumber(0))\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n      setRewards(new BigNumber(res))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(new BigNumber(0))\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWallet()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, fetchBalance, lotteryContract, ticketsContract])\n\n  return { claimLoading, claimAmount }\n}\n\nexport const useWinningNumbers = () => {\n  const [winngNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winngNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbaers = await getMatchingRewardLength(lotteryContract, numbers)\n      setMatchingNumbers(matchedNumbaers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n\n  return matchingNumbers\n}\n\nexport default useTickets\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Loading: React.FC = () => <StyledLoading />\n\nconst StyledLoading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useCallback } from 'react'\nimport { Button, Modal } from '@blzd-dev/uikit'\nimport styled from 'styled-components'\nimport { useWinningNumbers } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\n\ninterface UserTicketsModalProps {\n  myTicketNumbers: Array<any>\n  from?: string\n  onDismiss?: () => void\n}\n\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\n  const winNumbers = useWinningNumbers()\n  const TranslateString = useI18n()\n  const rewardMatch = useCallback(\n    (number) => {\n      let n = 0\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\n        // eslint-disable-next-line eqeqeq\n        if (winNumbers[i] == number[i]) n++\n      }\n      return n\n    },\n    [winNumbers],\n  )\n\n  const listItems = myTicketNumbers.map((number, index) => {\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <RewardP key={index}>\n          {emoji}\n          {number.toString()}\n          {emoji}\n        </RewardP>\n      )\n    }\n    // eslint-disable-next-line react/no-array-index-key\n    return <p key={index}>{number.toString()}</p>\n  })\n\n  return (\n    <Modal title={TranslateString(490, `My Tickets (Total: ${myTicketNumbers.length})`)} onDismiss={onDismiss}>\n      <TicketsList>\n        <h2>{listItems}</h2>\n      </TicketsList>\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\n        {TranslateString(438, 'Close')}\n      </StyledButton>\n    </Modal>\n  )\n}\n\nconst RewardP = styled.div`\n  color: #ff8c28;\n`\n\nconst TicketsList = styled.div`\n  text-align: center;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n`\n\nexport default UserTicketsModal\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Won, useModal } from '@blzd-dev/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\nimport Loading from '../Loading'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst StyledCardActions = styled.div`\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[1]}px;\n`\n\nconst PrizesWonContent: React.FC = () => {\n  const [requestedClaim, setRequestedClaim] = useState(false)\n  const TranslateString = useI18n()\n  const { claimLoading, claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim])\n\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\n\n  return (\n    <StyledCardContentInner>\n      <IconWrapper>\n        <Won />\n      </IconWrapper>\n      <Heading as=\"h3\" size=\"lg\" color=\"secondary\">\n        {TranslateString(999, 'You won!')}\n      </Heading>\n      {claimLoading && <Loading />}\n      {!claimLoading && (\n        <>\n          <WinningsWrapper>\n            <Heading as=\"h4\" size=\"xl\" style={{ marginRight: '6px' }}>\n              {winnings}\n            </Heading>\n            <Heading as=\"h4\" size=\"lg\">\n              CAKE\n            </Heading>\n          </WinningsWrapper>\n        </>\n      )}\n      <StyledCardActions>\n        <Button disabled={requestedClaim} onClick={handleClaim}>\n          {TranslateString(999, 'Collect')}\n        </Button>\n      </StyledCardActions>\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n        {TranslateString(432, 'View your tickets')}\n      </StyledButton>\n    </StyledCardContentInner>\n  )\n}\n\nexport default PrizesWonContent\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\n\nexport const useMultiClaimLottery = () => {\n  const { account } = useWallet()\n  const lotteryContract = useLottery()\n  const lotteryTicketContract = useLotteryTicket()\n\n  const handleClaim = useCallback(async () => {\n    try {\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\n      return txHash\n    } catch (e) {\n      return false\n    }\n  }, [account, lotteryContract, lotteryTicketContract])\n\n  return { onMultiClaim: handleClaim }\n}\n\nexport const useMultiBuyLottery = () => {\n  const { account } = useWallet()\n  const lotteryContract = useLottery()\n\n  const handleBuy = useCallback(\n    async (amount: string, numbers: Array<any>) => {\n      try {\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\n        return txHash\n      } catch (e) {\n        return false\n      }\n    },\n    [account, lotteryContract],\n  )\n\n  return { onMultiBuy: handleBuy }\n}\n\nexport const useMaxNumber = () => {\n  const [max, setMax] = useState(5)\n  const lotteryContract = useLottery()\n\n  const fetchMax = useCallback(async () => {\n    const maxNumber = await getMax(lotteryContract)\n    setMax(maxNumber)\n  }, [lotteryContract])\n\n  useEffect(() => {\n    if (lotteryContract) {\n      fetchMax()\n    }\n  }, [lotteryContract, fetchMax])\n\n  return max\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, useModal } from '@blzd-dev/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useTickets from 'hooks/useTickets'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledText = styled(Text)`\n  padding-left: 12px;\n`\n\nconst Image = styled.img`\n  margin-right: 6px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 20px;\n  }\n`\nconst StyledButton = styled(Button)`\n  padding: 0 12px;\n  height: unset;\n`\n\nconst NoPrizesContent: React.FC = () => {\n  const TranslateString = useI18n()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  return (\n    <Wrapper>\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\n      <TextWrapper>\n        <StyledText color=\"textDisabled\">{TranslateString(999, 'Sorry, no prizes to collect')}</StyledText>\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n          {TranslateString(432, 'View your tickets')}\n        </StyledButton>\n      </TextWrapper>\n    </Wrapper>\n  )\n}\n\nexport default NoPrizesContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@blzd-dev/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport PrizesWonContent from './PrizesWonContent'\nimport NoPrizesContent from './NoPrizesContent'\n\nconst StyledCard = styled(Card)`\n  ${(props) =>\n    props.isDisabled\n      ? `  \n        margin-top: 16px;\n        background-color: unset;\n        box-shadow: unset;\n        border: 1px solid ${props.theme.colors.textDisabled};\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst YourPrizesCard: React.FC = () => {\n  const { claimAmount } = useTotalClaim()\n\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\n      <CardBody>{isAWin ? <PrizesWonContent /> : <NoPrizesContent />}</CardBody>\n    </StyledCard>\n  )\n}\n\nexport default YourPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Ticket } from '@blzd-dev/uikit'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst IconWrapper = styled.div`\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst UnlockWalletCard = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card isActive>\n      <StyledCardBody>\n        <IconWrapper>\n          <Ticket />\n        </IconWrapper>\n        <StyledHeading size=\"md\">{TranslateString(999, 'Unlock wallet to access lottery')}</StyledHeading>\n        <UnlockButton />\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default UnlockWalletCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@blzd-dev/uikit'\nimport useI18n from '../../hooks/useI18n'\nimport Input, { InputProps } from '../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  availableSymbol: string\n  onSelectMax?: () => void\n}\n\nconst TicketInput: React.FC<TokenInputProps> = ({ max, symbol, availableSymbol, onChange, onSelectMax, value }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <StyledTokenInput>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            <StyledTokenSymbol>{symbol}</StyledTokenSymbol>\n            <StyledSpacer />\n            <div>\n              <Button size=\"sm\" onClick={onSelectMax}>\n                {TranslateString(452, 'Max')}\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n      <StyledMaxText>{TranslateString(454, `${max.toLocaleString()} ${availableSymbol} Available`)}</StyledMaxText>\n    </StyledTokenInput>\n  )\n}\n\nconst StyledTokenInput = styled.div``\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.colors.primary};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`\n\nconst StyledTokenSymbol = styled.span`\n  color: ${(props) => props.theme.colors.primary};\n  font-weight: 700;\n`\n\nexport default TicketInput\n","import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Modal } from '@blzd-dev/uikit'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport TicketInput from 'components/TicketInput'\nimport ModalActions from 'components/ModalActions'\nimport { useMultiBuyLottery, useMaxNumber } from 'hooks/useBuyLottery'\nimport useI18n from 'hooks/useI18n'\n\ninterface BuyTicketModalProps {\n  max: BigNumber\n  onConfirm?: (amount: string, numbers: Array<number>) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst BuyTicketModal: React.FC<BuyTicketModalProps> = ({ max, onDismiss }) => {\n  const [val, setVal] = useState('1')\n  const [pendingTx, setPendingTx] = useState(false)\n  const [, setRequestedBuy] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const maxTickets = useMemo(() => {\n    return parseInt(getFullDisplayBalance(max.div(new BigNumber(10))))\n  }, [max])\n\n  const handleChange = (e: React.FormEvent<HTMLInputElement>) => setVal(e.currentTarget.value)\n\n  const { onMultiBuy } = useMultiBuyLottery()\n  const maxNumber = useMaxNumber()\n  const handleBuy = useCallback(async () => {\n    try {\n      setRequestedBuy(true)\n      const length = parseInt(val)\n      // @ts-ignore\n      // eslint-disable-next-line prefer-spread\n      const numbers = Array.apply(null, { length }).map(() => [\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n        Math.floor(Math.random() * maxNumber) + 1,\n      ])\n      const txHash = await onMultiBuy('10', numbers)\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        setRequestedBuy(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiBuy, setRequestedBuy, maxNumber, val])\n\n  const handleSelectMax = useCallback(() => {\n    if (Number(maxTickets) > 50) {\n      setVal('50')\n    } else {\n      setVal(maxTickets.toString())\n    }\n  }, [maxTickets])\n\n  const cakeCosts = (amount: string): number => {\n    return +amount * 10\n  }\n  return (\n    <Modal title={TranslateString(450, 'Enter amount of tickets to buy')} onDismiss={onDismiss}>\n      <TicketInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol=\"TICKET\"\n        availableSymbol=\"CAKE\"\n      />\n      <div>\n        <Tips>{TranslateString(456, 'Your amount must be a multiple of 10 CAKE')}</Tips>\n        <Tips>{TranslateString(458, '1 Ticket = 10 CAKE')}</Tips>\n      </div>\n      <div>\n        <Announce>\n          {TranslateString(\n            478,\n            'Ticket purchases are final. Your CAKE cannot be returned to you after buying tickets.',\n          )}\n        </Announce>\n        <Final>{TranslateString(460, `You will spend: ${cakeCosts(val)} CAKE`)}</Final>\n      </div>\n      <ModalActions>\n        <Button variant=\"secondary\" onClick={onDismiss}>\n          {TranslateString(462, 'Cancel')}\n        </Button>\n        <Button\n          id=\"lottery-buy-complete\"\n          disabled={pendingTx || parseInt(val) > Number(maxTickets) || parseInt(val) > 50 || parseInt(val) < 1}\n          onClick={async () => {\n            setPendingTx(true)\n            await handleBuy()\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(488, 'Pending Confirmation') : TranslateString(464, 'Confirm')}\n        </Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default BuyTicketModal\n\nconst Tips = styled.div`\n  margin-left: 0.4em;\n  font-size: 14px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst Final = styled.div`\n  margin-top: 1em;\n  text-align: center;\n  font-size: 20px;\n  font-weight: 600;\n  color: ${(props) => props.theme.colors.primary};\n`\nconst Announce = styled.div`\n  margin-top: 1em;\n  margin-left: 0.4em;\n  color: #ed4b9e;\n`\n","import React from 'react'\nimport { Button, Modal } from '@blzd-dev/uikit'\nimport ModalActions from 'components/ModalActions'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\n\nconst WarningModal: React.FC<{ onDismiss?: () => void }> = ({ onDismiss }) => {\n  const TranslateString = useI18n()\n\n  return (\n    <Modal title={TranslateString(466, 'Warning')} onDismiss={onDismiss}>\n      <TicketsList>\n        {TranslateString(468, 'Lottery ticket purchases are final.')}\n        <br />\n        {TranslateString(470, 'Your CAKE will not be returned to you after you spend it to buy tickets.')}\n        <br />\n        {TranslateString(472, 'Tickets are only valid for one lottery draw, and will be burnedafter the draw.')}\n        <br />\n        {TranslateString(\n          474,\n          'Buying tickets does not guarantee you will win anything. Please only participate once you understand the risks.',\n        )}\n      </TicketsList>\n      <ModalActions>\n        <Button onClick={onDismiss}>{TranslateString(476, 'I understand')}</Button>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nconst TicketsList = styled.div`\n  text-align: left;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nexport default WarningModal\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, useModal } from '@blzd-dev/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport { useLotteryAllowance } from 'hooks/useAllowance'\nimport { useLotteryApprove } from 'hooks/useApprove'\nimport useTickets from 'hooks/useTickets'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport BuyTicketModal from './BuyTicketModal'\nimport MyTicketsModal from './UserTicketsModal'\nimport PurchaseWarningModal from './PurchaseWarningModal'\n\nconst CardActions = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    justify-content: space-between;\n  }\n`\n\nconst TicketCard: React.FC = () => {\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const TranslateString = useI18n()\n  const allowance = useLotteryAllowance()\n  const { onApprove } = useLotteryApprove()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const cakeBalance = useTokenBalance(getCakeAddress())\n\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const [onPresentApprove] = useModal(<PurchaseWarningModal />)\n  const [onPresentBuy] = useModal(<BuyTicketModal max={cakeBalance} tokenName=\"CAKE\" />)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n      onPresentApprove()\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, onPresentApprove])\n\n  const renderLotteryTicketButtons = () => {\n    if (!allowance.toNumber()) {\n      return (\n        <>\n          <Button disabled>{TranslateString(432, 'View your tickets')}</Button>\n          <Button disabled={requestedApproval} onClick={handleApprove}>\n            {TranslateString(999, 'Approve CAKE')}\n          </Button>\n        </>\n      )\n    }\n    return (\n      <>\n        <Button\n          style={{ marginRight: '8px' }}\n          disabled={ticketsLength === 0}\n          variant=\"secondary\"\n          onClick={onPresentMyTickets}\n        >\n          {TranslateString(432, 'View your tickets')}\n        </Button>\n        <Button id=\"lottery-buy-start\" onClick={onPresentBuy}>\n          {TranslateString(430, 'Buy ticket')}\n        </Button>\n      </>\n    )\n  }\n\n  return (\n    <CardActions>\n      {lotteryHasDrawn ? (\n        <Button disabled> {TranslateString(999, 'On sale soon')}</Button>\n      ) : (\n        renderLotteryTicketButtons()\n      )}\n    </CardActions>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody, TicketRound, Text, Heading } from '@blzd-dev/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\nimport useTickets from 'hooks/useTickets'\nimport { useCurrentTime } from 'hooks/useTimer'\nimport TicketActions from './TicketActions'\nimport { getTicketSaleTime } from '../../helpers/CountdownHelpers'\n\ninterface CardProps {\n  isSecondCard?: boolean\n}\n\nconst StyledCard = styled(Card)<CardProps>`\n  ${(props) =>\n    props.isSecondCard\n      ? `  \n        margin-top: 16px;\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\nconst CardHeader = styled.div`\n  align-items: center;\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst TicketCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst TicketCard: React.FC<CardProps> = ({ isSecondCard = false }) => {\n  const TranslateString = useI18n()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n\n  const tickets = useTickets()\n  const ticketsLength = tickets.length\n\n  const currentMillis = useCurrentTime()\n  const timeUntilTicketSale = lotteryHasDrawn && getTicketSaleTime(currentMillis)\n\n  return (\n    <StyledCard isSecondCard={isSecondCard}>\n      <CardBody>\n        <CardHeader>\n          <IconWrapper>\n            <TicketRound />\n          </IconWrapper>\n          {lotteryHasDrawn ? (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(999, 'Until ticket sale:')}\n              </Text>\n              <Heading size=\"lg\">{timeUntilTicketSale}</Heading>\n            </TicketCountWrapper>\n          ) : (\n            <TicketCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(999, 'Your tickets for this round')}\n              </Text>\n              <Heading size=\"lg\">{ticketsLength}</Heading>\n            </TicketCountWrapper>\n          )}\n        </CardHeader>\n        <TicketActions />\n      </CardBody>\n    </StyledCard>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport useI18n from 'hooks/useI18n'\nimport { Heading, Text } from '@blzd-dev/uikit'\n\nexport interface PrizeGridProps {\n  lotteryPrizeAmount?: number\n  pastDraw?: boolean\n  jackpotMatches?: number\n  twoTicketMatches?: number\n  threeTicketMatches?: number\n}\n\nconst Grid = styled.div<{ pastDraw?: boolean }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\n  grid-template-rows: repeat(4, auto);\n`\n\nconst RightAlignedText = styled(Text)`\n  text-align: right;\n`\n\nconst RightAlignedHeading = styled(Heading)`\n  text-align: right;\n`\n\nconst GridItem = styled.div<{ marginBottom?: string }>`\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\n`\n\nconst PastDrawGridItem = styled(GridItem)`\n  transform: translate(-40%, 0%);\n`\n\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\n  lotteryPrizeAmount = 0,\n  pastDraw = false,\n  jackpotMatches,\n  twoTicketMatches,\n  threeTicketMatches,\n}) => {\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const TranslateString = useI18n()\n\n  return (\n    <Grid pastDraw={pastDraw}>\n      <GridItem>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(999, 'No. Matched')}\n        </Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n            {TranslateString(999, 'Winners')}\n          </RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n          {TranslateString(999, 'Prize Pot')}\n        </RightAlignedText>\n      </GridItem>\n      {/* 4 matches row */}\n      <GridItem>\n        <Heading size=\"md\">4</Heading>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedHeading size=\"md\">{jackpotMatches}</RightAlignedHeading>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedHeading size=\"md\">{fourMatchesAmount.toLocaleString()}</RightAlignedHeading>\n      </GridItem>\n      {/* 3 matches row */}\n      <GridItem>\n        <Text bold>3</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>{threeMatchesAmount.toLocaleString()}</RightAlignedText>\n      </GridItem>\n      {/* 2 matches row */}\n      <GridItem marginBottom=\"20px\">\n        <Text>2</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem marginBottom=\"20px\">\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem marginBottom=\"20px\">\n        <RightAlignedText>{twoMatchesAmount.toLocaleString()}</RightAlignedText>\n      </GridItem>\n      {/* Burn row */}\n      <GridItem marginBottom=\"0\">\n        <Text>{TranslateString(999, `${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\n      </GridItem>\n      {pastDraw ? (\n        <>\n          <GridItem marginBottom=\"0\" />\n          <GridItem marginBottom=\"0\">\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n          </GridItem>\n        </>\n      ) : (\n        <GridItem marginBottom=\"0\">\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n        </GridItem>\n      )}\n    </Grid>\n  )\n}\n\nexport default PrizeGrid\n","import React, { useContext, useState } from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Heading, Card, CardBody, CardFooter, Text, LogoRoundIcon, Flex, Skeleton } from '@blzd-dev/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport { useTotalRewards } from 'hooks/useTickets'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton/ExpandableSectionButton'\nimport PrizeGrid from '../PrizeGrid'\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  justify-content: space-between;\n`\n\nconst Right = styled.div`\n  display: flex;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    display: none;\n  }\n`\n\nconst Left = styled.div`\n  display: flex;\n`\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst PrizeCountWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst ExpandingWrapper = styled.div<{ showFooter: boolean }>`\n  height: ${(props) => (props.showFooter ? '100%' : '0px')};\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    height: 100%;\n  }\n`\n\nconst TotalPrizesCard = () => {\n  const TranslateString = useI18n()\n  const { account } = useWallet()\n  const [showFooter, setShowFooter] = useState(false)\n  const lotteryPrizeAmount = +getBalanceNumber(useTotalRewards()).toFixed(0)\n  const lotteryPrizeWithCommaSeparators = lotteryPrizeAmount.toLocaleString()\n  const { currentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  return (\n    <Card>\n      <CardBody>\n        {account && (\n          <Flex mb=\"16px\" alignItems=\"center\" justifyContent=\"space-between\" style={{ height: '20px' }}>\n            {currentLotteryNumber === 0 && <Skeleton height={20} width={56} />}\n            {currentLotteryNumber > 0 && (\n              <>\n                <Text fontSize=\"12px\" style={{ fontWeight: 600 }}>{`Round #${currentLotteryNumber}`}</Text>\n              </>\n            )}\n          </Flex>\n        )}\n        <CardHeading>\n          <Left>\n            <IconWrapper>\n              <LogoRoundIcon />\n            </IconWrapper>\n            <PrizeCountWrapper>\n              <Text fontSize=\"14px\" color=\"textSubtle\">\n                {TranslateString(999, 'Total Pot:')}\n              </Text>\n              <Heading size=\"lg\">{lotteryPrizeWithCommaSeparators} CAKE</Heading>\n            </PrizeCountWrapper>\n          </Left>\n          <Right>\n            <ExpandableSectionButton onClick={() => setShowFooter(!showFooter)} expanded={showFooter} />\n          </Right>\n        </CardHeading>\n      </CardBody>\n      <ExpandingWrapper showFooter={showFooter}>\n        <CardFooter>\n          <PrizeGrid lotteryPrizeAmount={lotteryPrizeAmount} />\n        </CardFooter>\n      </ExpandingWrapper>\n    </Card>\n  )\n}\n\nexport default TotalPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Image, Card, CardBody } from '@blzd-dev/uikit'\nimport { useWinningNumbers, useMatchingRewardLength } from 'hooks/useTickets'\nimport useI18n from 'hooks/useI18n'\nimport useGetLotteryHasDrawn from 'hooks/useGetLotteryHasDrawn'\n\nconst WinningNumbers: React.FC = () => {\n  const { account } = useWallet()\n  const winNumbers = useWinningNumbers()\n  const lotteryHasDrawn = useGetLotteryHasDrawn()\n  const MatchedNumber4 = useMatchingRewardLength(4)\n  const MatchedNumber3 = useMatchingRewardLength(3)\n  const MatchedNumber2 = useMatchingRewardLength(2)\n  const TranslateString = useI18n()\n\n  return (\n    <CardWrapper>\n      <Card>\n        <CardBody>\n          <StyledCardContentInner>\n            <StyledCardHeader>\n              <Title>\n                {account && lotteryHasDrawn\n                  ? `🥳${TranslateString(570, 'Winning Numbers This Round')}🥳`\n                  : TranslateString(572, 'Latest Winning Numbers')}\n              </Title>\n              <br />\n            </StyledCardHeader>\n            <Row>\n              {winNumbers.map((number, index) => (\n                // eslint-disable-next-line react/no-array-index-key\n                <TicketNumberBox key={index}>\n                  <CenteredText>{number}</CenteredText>\n                </TicketNumberBox>\n              ))}\n            </Row>\n            <RabbitRow>\n              <RabbitBox>\n                <CardImageFirst>\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\n                </CardImageFirst>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n              <RabbitBox>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBox>\n            </RabbitRow>\n            <RabbitRowSmall>\n              <RabbitBoxSmall>\n                <CardImageFirst>\n                  <Image src=\"/images/sign bunny 1@2x.png\" alt=\"Number 1\" width={200} height={150} responsive />\n                </CardImageFirst>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 2@2x.png\" alt=\"Number 2\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 3@2x.png\" alt=\"Number 3\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n              <RabbitBoxSmall>\n                <CardImage style={{ marginLeft: '-1.2em' }}>\n                  <Image src=\"/images/sign bunny 4@2x.png\" alt=\"Number 4\" width={200} height={150} responsive />\n                </CardImage>\n              </RabbitBoxSmall>\n            </RabbitRowSmall>\n            <Column>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(442, 'Tickets matching 4 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber4}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(444, 'Tickets matching 3 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber3}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n              <RowNoPadding>\n                <CenteredTextWithPadding>{TranslateString(446, 'Tickets matching 2 numbers:')}</CenteredTextWithPadding>\n                <CenteredTextWithPadding>\n                  <strong>{MatchedNumber2}</strong>\n                </CenteredTextWithPadding>\n              </RowNoPadding>\n            </Column>\n            <Link href=\"https://api.pancakeswap.com/api/lottery?page=0&pageSize=25\" target=\"_blank\">\n              {TranslateString(448, 'Export recent winning numbers')}\n            </Link>\n          </StyledCardContentInner>\n        </CardBody>\n      </Card>\n    </CardWrapper>\n  )\n}\nconst Link = styled.a`\n  margin-top: 1em;\n  text-decoration: none;\n  color: #25beca;\n`\n\nconst Row = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst RabbitRow = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`\n\nconst RabbitRowSmall = styled.div`\n  margin-top: -2.3em;\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n\n  @media (min-width: 768px) {\n    display: none;\n  }\n`\n\nconst CardImage = styled.div`\n  text-align: center;\n`\n\nconst CardImageFirst = styled.div`\n  text-align: center;\n  margin-left: -1.2em;\n\n  @media (max-width: 600) {\n    margin-left: -0.2em;\n  }\n`\n\nconst RowNoPadding = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: row;\n`\n\nconst Column = styled.div`\n  margin-top: 1em;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CenteredText = styled.div`\n  text-align: center;\n  align-items: center;\n`\n\nconst CenteredTextWithPadding = styled.div`\n  text-align: center;\n  align-items: center;\n  padding-left: 2px;\n  padding-right: 2px;\n`\n\nconst TicketNumberBox = styled.div`\n  padding: 10px;\n  border-radius: 12px;\n  background: linear-gradient(180deg, #54dade 0%, #24c7d6 76.22%);\n  color: white;\n  font-size: 20px;\n  font-weight: 900;\n  margin: 10px;\n  margin-bottom: 7px;\n  width: 40px;\n\n  @media (min-width: 768px) {\n    font-size: 40px;\n    margin: 20px;\n    width: 60px;\n  }\n`\n\nconst RabbitBox = styled.div`\n  /* padding: 10px; */\n  border-radius: 12px;\n  margin: 16px 20px;\n  width: 60px;\n`\n\nconst RabbitBoxSmall = styled.div`\n  padding-top: 10px;\n  padding-left: 10px;\n  border-radius: 12px;\n  margin: 20px;\n  width: 20px;\n`\n\nconst StyledCardHeader = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`\n\nconst CardWrapper = styled.div``\n\nconst Title = styled.div`\n  color: ${(props) => props.theme.colors.secondary};\n  font-size: 24px;\n  width: 50vw;\n  text-align: center;\n  font-weight: 1000;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nexport default WinningNumbers\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Heading, Link, Image } from '@blzd-dev/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst LayoutWrapper = styled.div`\n  max-width: 500px;\n  margin: 0 auto 40px;\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst StyledImage = styled(Image)`\n  align-self: center;\n`\n\nconst StyledLink = styled(Link)`\n  align-self: center;\n  margin-top: 16px;\n`\n\nconst HowItWorks = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <LayoutWrapper>\n      <StyledImage src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" width={163} height={140} />\n      <StyledHeading size=\"lg\" as=\"h3\" color=\"secondary\">\n        {TranslateString(999, 'How it works')}\n      </StyledHeading>\n      <Text fontSize=\"16px\">\n        {TranslateString(\n          999,\n          'Spend CAKE to buy tickets, contributing to the lottery pot. Win prizes if 2, 3, or 4 of your ticket numbers match the winning numbers and their exact order!',\n        )}\n      </Text>\n      <StyledLink href=\"https://docs.pancakeswap.finance/lottery-1\">Read more</StyledLink>\n    </LayoutWrapper>\n  )\n}\n\nexport default HowItWorks\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { BaseLayout } from '@blzd-dev/uikit'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport YourPrizesCard from './components/YourPrizesCard'\nimport UnlockWalletCard from './components/UnlockWalletCard'\nimport TicketCard from './components/TicketCard'\nimport TotalPrizesCard from './components/TotalPrizesCard'\nimport WinningNumbers from './components/WinningNumbers'\nimport HowItWorks from './components/HowItWorks'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: ${(props) => (props.isAWin ? 'column' : 'column-reverse')};\n`\n\nconst NextDrawPage: React.FC = () => {\n  const { account } = useWallet()\n  const { claimAmount } = useTotalClaim()\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  return (\n    <>\n      <Cards>\n        <div>\n          <TotalPrizesCard />\n        </div>\n        <SecondCardColumnWrapper isAWin={isAWin}>\n          {!account ? (\n            <UnlockWalletCard />\n          ) : (\n            <>\n              <YourPrizesCard />\n              <TicketCard isSecondCard={isAWin} />\n            </>\n          )}\n        </SecondCardColumnWrapper>\n      </Cards>\n      <HowItWorks />\n      {/* legacy page content */}\n      <WinningNumbers />\n    </>\n  )\n}\n\nexport default NextDrawPage\n","export type DataResponse = {\n  lotteryNumber: number\n  lotteryDate: string\n  lotteryNumbers: number[]\n  poolSize: number\n  burned: number\n  contractLink: string\n  jackpotTicket: number\n  match2Ticket: number\n  match3Ticket: number\n  match4Ticket: number\n  poolJackpot: number\n  poolMatch3: number\n  poolMatch2: number\n\n  // TODO: Fill in the error type\n  error: any\n}\n\n/**\n * Get data for a specific lottery\n */\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\n  try {\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\n    const data = await response.json()\n\n    return data\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport default getLotteryRoundData\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Button } from '@blzd-dev/uikit'\nimport useI18n from 'hooks/useI18n'\n\ninterface PastLotterySearcherProps {\n  initialLotteryNumber: number\n  onSubmit: (num: number) => void\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst SearchWrapper = styled.div`\n  position: relative;\n`\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`\n\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\n  const [isError, setIsError] = useState(false)\n  const TranslateString = useI18n()\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n    onSubmit(lotteryNumber)\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    const value = parseInt(evt.currentTarget.value, 10)\n\n    // The max value will always be the initialLotterNumber which equals\n    // the latest lottery round\n    setIsError(value > initialLotteryNumber)\n    setLotteryNumber(value)\n  }\n\n  return (\n    <Wrapper>\n      <Text>{TranslateString(999, 'Select lottery number:')}</Text>\n      <form onSubmit={handleSubmit}>\n        <SearchWrapper>\n          <Input\n            value={lotteryNumber}\n            type=\"number\"\n            isWarning={isError}\n            max={initialLotteryNumber}\n            onChange={handleChange}\n          />\n          <ButtonWrapper>\n            <Button type=\"submit\" size=\"sm\" disabled={isError}>\n              {TranslateString(999, 'Search')}\n            </Button>\n          </ButtonWrapper>\n        </SearchWrapper>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default PastLotterySearcher\n","import React from 'react'\nimport { Text } from '@blzd-dev/uikit'\n\ninterface PastRoundCardErrorProps {\n  error: {\n    message: string\n  }\n}\n\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\n  return <Text p=\"24px\">{error.message}</Text>\n}\n\nexport default PastRoundCardError\n","import objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text } from '@blzd-dev/uikit'\n\ninterface HeadingProps {\n  valueToDisplay?: string\n  children?: string\n  Icon?: React.ComponentType\n}\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\n  return (\n    <Flex {...props}>\n      {Icon && (\n        <IconWrapper>\n          <Icon />\n        </IconWrapper>\n      )}\n      <Flex flexDirection=\"column\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {children}\n        </Text>\n        <Heading size=\"lg\">{valueToDisplay}</Heading>\n      </Flex>\n    </Flex>\n  )\n}\n\nLotteryCardHeading.defaultProps = {\n  valueToDisplay: '',\n  Icon: () => <div />,\n  children: '',\n}\n\nexport default LotteryCardHeading\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, LinkExternal, useModal } from '@blzd-dev/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useTickets from 'hooks/useTickets'\nimport UnlockButton from 'components/UnlockButton'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 24px;\n\n  & > div {\n    flex: 1;\n    width: 100%;\n  }\n`\n\nconst ExternalLinkWrap = styled(LinkExternal)`\n  align-items: center;\n  display: flex;\n  height: 48px;\n  justify-content: center;\n  text-decoration: none;\n  width: 100%;\n`\n\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\n  const TranslateString = useI18n()\n  const tickets = useTickets(lotteryNumber)\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const { account } = useWallet()\n\n  if (!account) {\n    return (\n      <Wrapper>\n        <UnlockButton />\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper>\n      <div>\n        <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets}>\n          {TranslateString(999, 'View your tickets')}\n        </Button>\n      </div>\n      <div>\n        <ExternalLinkWrap href={contractLink}>{TranslateString(999, 'View on BscScan')}</ExternalLinkWrap>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default TicketCard\n","const formatLotteryDate = (lotteryDate: string) => {\n  if (!lotteryDate) {\n    return {}\n  }\n\n  const date = new Date(lotteryDate)\n\n  const dateString = date.toDateString()\n  const hours = date.getUTCHours()\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\n\n  return { hours, monthAndDay }\n}\n\nexport default formatLotteryDate\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@blzd-dev/uikit'\nimport formatLotteryDate from '../helpers/formatLotteryDate'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`\n\nconst Timestamp = ({ timeValue }) => {\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\n\n  return (\n    <Wrapper>\n      <Text fontSize=\"14px\">\n        {monthAndDay}, {hours}:00 UTC\n      </Text>\n    </Wrapper>\n  )\n}\n\nexport default Timestamp\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, CardBody, CardFooter, LogoRoundIcon, TicketRound } from '@blzd-dev/uikit'\nimport useI18n from 'hooks/useI18n'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport LotteryCardHeading from '../LotteryCardHeading'\nimport PastLotteryActions from './PastLotteryActions'\nimport PrizeGrid from '../PrizeGrid'\nimport Timestamp from '../Timestamp'\n\ninterface PastRoundCardDetailsProps {\n  data: DataResponse\n}\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\n  const TranslateString = useI18n()\n\n  const {\n    contractLink,\n    jackpotTicket,\n    lotteryDate,\n    lotteryNumber,\n    lotteryNumbers,\n    match2Ticket,\n    match3Ticket,\n    poolSize,\n  } = data\n\n  return (\n    !data.error &&\n    data && (\n      <>\n        <CardBody>\n          <CardHeading>\n            <Timestamp timeValue={lotteryDate} />\n            <Heading size=\"md\" mb=\"24px\">\n              Round #{lotteryNumber}\n            </Heading>\n            <TopLotteryCardHeading\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\n              Icon={TicketRound}\n            >\n              {TranslateString(999, 'Winning numbers')}\n            </TopLotteryCardHeading>\n            <LotteryCardHeading\n              valueToDisplay={TranslateString(999, `${poolSize.toLocaleString()} CAKE`)}\n              Icon={LogoRoundIcon}\n            >\n              {TranslateString(999, 'Total prizes')}\n            </LotteryCardHeading>\n          </CardHeading>\n        </CardBody>\n        <CardFooter>\n          <PrizeGrid\n            lotteryPrizeAmount={poolSize}\n            jackpotMatches={jackpotTicket}\n            twoTicketMatches={match2Ticket}\n            threeTicketMatches={match3Ticket}\n            pastDraw\n          />\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\n        </CardFooter>\n      </>\n    )\n  )\n}\n\nexport default PastRoundCardDetails\n","import React from 'react'\nimport { Card } from '@blzd-dev/uikit'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport PastRoundCardError from './PastRoundCardError'\nimport PastRoundCardDetails from './PastRoundCardDetails'\n\ninterface PastRoundCardProps {\n  error: {\n    message: string\n  }\n  data: DataResponse\n}\n\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\n}\n\nexport default PastRoundCard\n","import { useContext, useEffect, useState } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\n\ntype GetRecentLotteryRoundDataReturn = {\n  isLoading: boolean\n  data: DataResponse\n  mostRecentLotteryNumber: number\n  error: any\n}\n\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  useEffect(() => {\n    const fetchRecentLotteryData = async () => {\n      try {\n        setIsLoading(true)\n\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\n        setData(roundData)\n      } catch (err) {\n        setError(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (mostRecentLotteryNumber > 0) {\n      fetchRecentLotteryData()\n    }\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\n\n  return { isLoading, data, mostRecentLotteryNumber, error }\n}\n\nexport default useGetRecentLotteryRoundData\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@blzd-dev/uikit'\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\nimport useI18n from 'hooks/useI18n'\nimport PastLotterySearcher from './PastLotterySearcher'\nimport PastRoundCard from './PastRoundCard'\nimport Loading from '../Loading'\nimport useGetRecentLotteryRoundData from '../../hooks/useGetRecentLotteryRoundData'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 552px; // height of final card\n`\n\nconst PastLotteryRoundViewer = () => {\n  const [state, setState] = useState({\n    roundData: null,\n    error: { message: null, type: null },\n    isInitialized: false,\n    isLoading: true,\n  })\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\n  const TranslateString = useI18n()\n  const { roundData, error, isInitialized, isLoading } = state\n\n  useEffect(() => {\n    if (initialLotteryData) {\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\n    }\n  }, [initialLotteryData, setState])\n\n  const handleSubmit = async (lotteryNumber: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n    }))\n\n    getLotteryRoundData(lotteryNumber)\n      .then((data) => {\n        if (data.error) {\n          setState((prevState) => ({\n            ...prevState,\n            error: {\n              message: TranslateString(999, 'The lottery number you provided does not exist'),\n              type: 'out of range',\n            },\n            isLoading: false,\n            isInitialized: true,\n          }))\n        } else {\n          setState((prevState) => ({\n            ...prevState,\n            error: { message: null, type: null },\n            roundData: data,\n            isLoading: false,\n            isInitialized: true,\n          }))\n        }\n      })\n      .catch(() => {\n        setState((prevState) => ({\n          ...prevState,\n          error: { message: TranslateString(999, 'Error fetching data'), type: 'api' },\n          isLoading: false,\n          isInitialized: true,\n        }))\n      })\n  }\n\n  return (\n    <Wrapper>\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\n      {!isInitialized || isLoading ? (\n        <Card>\n          <StyledCardBody>\n            <Loading />\n          </StyledCardBody>\n        </Card>\n      ) : (\n        <PastRoundCard error={error} data={roundData} />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default PastLotteryRoundViewer\n","import React, { lazy, Suspense, useContext } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@blzd-dev/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport Loading from '../Loading'\n\nconst Line = lazy(() => import('./LineChartWrapper'))\n\nconst InnerWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\n\nconst HistoryChart: React.FC = () => {\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\n  const getDataArray = (kind) => {\n    return historyData\n      .map((dataPoint) => {\n        return dataPoint[kind]\n      })\n      .reverse()\n  }\n\n  const lineStyles = ({ color }) => {\n    return {\n      borderColor: color,\n      fill: false,\n      borderWidth: 2,\n      pointRadius: 0,\n      pointHitRadius: 10,\n    }\n  }\n\n  const chartData = {\n    labels: getDataArray('lotteryNumber'),\n    datasets: [\n      {\n        label: 'Pool Size',\n        data: getDataArray('poolSize'),\n        yAxisID: 'y-axis-pool',\n        ...lineStyles({ color: '#8F80BA' }),\n      },\n      {\n        label: 'Burned',\n        data: getDataArray('burned'),\n        yAxisID: 'y-axis-burned',\n        ...lineStyles({ color: '#1FC7D4' }),\n      },\n    ],\n  }\n\n  const axesStyles = ({ color, lineHeight }) => {\n    return {\n      borderCapStyle: 'round',\n      gridLines: { display: false },\n      ticks: {\n        fontFamily: 'Rubik, sans-serif',\n        fontColor: color,\n        fontSize: 14,\n        lineHeight,\n        maxRotation: 0,\n        beginAtZero: true,\n        autoSkipPadding: 15,\n        userCallback: (value) => {\n          return value.toLocaleString()\n        },\n      },\n    }\n  }\n\n  const options = {\n    legend: { display: false },\n    scales: {\n      yAxes: [\n        {\n          type: 'linear',\n          display: true,\n          position: 'left',\n          id: 'y-axis-pool',\n          ...axesStyles({ color: '#8f80ba', lineHeight: 1.6 }),\n        },\n        {\n          type: 'linear',\n          display: true,\n          position: 'right',\n          id: 'y-axis-burned',\n          ...axesStyles({ color: '#1FC7D4', lineHeight: 1.5 }),\n        },\n      ],\n      xAxes: [\n        {\n          ...axesStyles({ color: '#452A7A', lineHeight: 1 }),\n        },\n      ],\n    },\n  }\n\n  return (\n    <>\n      {historyError && (\n        <InnerWrapper>\n          <Text>Error fetching data</Text>\n        </InnerWrapper>\n      )}\n      {!historyError && historyData.length > 1 ? (\n        <Suspense fallback={<div>Loading...</div>}>\n          <Line data={chartData} options={options} type=\"line\" />\n        </Suspense>\n      ) : (\n        <InnerWrapper>\n          <Loading />\n        </InnerWrapper>\n      )}\n    </>\n  )\n}\n\nexport default HistoryChart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@blzd-dev/uikit'\nimport useI18n from 'hooks/useI18n'\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 36px 0 28px;\n`\n\nconst LegendItem = styled.div`\n  display: flex;\n  margin-right: 18px;\n  align-items: center;\n`\n\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\n  margin-right: 6px;\n`\n\nconst Legend = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Wrapper>\n      <LegendItem>\n        <Circle isPoolSize />\n        <Text>{TranslateString(999, 'Pool Size')}</Text>\n      </LegendItem>\n      <LegendItem>\n        <Circle />\n        <Text>{TranslateString(999, 'Burned')}</Text>\n      </LegendItem>\n    </Wrapper>\n  )\n}\n\nexport default Legend\n","import React from 'react'\nimport { Heading, Card, CardBody } from '@blzd-dev/uikit'\nimport useI18n from 'hooks/useI18n'\nimport HistoryChart from './HistoryChart'\nimport Legend from './Legend'\n\nconst PastDrawsHistoryCard: React.FC = () => {\n  const TranslateString = useI18n()\n\n  return (\n    <Card>\n      <CardBody>\n        <Heading size=\"md\">{TranslateString(999, 'History')}</Heading>\n        <Legend />\n        <HistoryChart />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default PastDrawsHistoryCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BaseLayout } from '@blzd-dev/uikit'\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: column;\n`\n\nconst BunnyImageWrapper = styled.div`\n  display: flex;\n  margin-top: 32px;\n  justify-content: center;\n`\n\nconst PastDrawsPage: React.FC = () => {\n  return (\n    <Cards>\n      <PastLotteryRoundViewer />\n      <SecondCardColumnWrapper>\n        <PastDrawsHistoryCard />\n        <BunnyImageWrapper>\n          <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" />\n        </BunnyImageWrapper>\n      </SecondCardColumnWrapper>\n    </Cards>\n  )\n}\n\nexport default PastDrawsPage\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { ButtonMenu, ButtonMenuItem } from '@blzd-dev/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\nimport useI18n from 'hooks/useI18n'\nimport { useLottery } from 'hooks/useContract'\nimport Page from 'components/layout/Page'\nimport Hero from './components/Hero'\nimport Divider from './components/Divider'\nimport NextDrawPage from './NextDrawPage'\nimport PastDrawsPage from './PastDrawsPage'\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 32px;\n`\n\nconst Lottery: React.FC = () => {\n  const lotteryContract = useLottery()\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const [activeIndex, setActiveIndex] = useState(0)\n  const [historyData, setHistoryData] = useState([])\n  const [historyError, setHistoryError] = useState(false)\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\n\n  useEffect(() => {\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\n      .then((response) => response.json())\n      .then((data) => setHistoryData(data))\n      .catch(() => {\n        setHistoryError(true)\n      })\n  }, [])\n\n  useEffect(() => {\n    const getInitialLotteryIndex = async () => {\n      const index = await getLotteryIssueIndex(lotteryContract)\n      const previousLotteryNumber = index - 1\n\n      setCurrentLotteryNumber(index)\n      setMostRecentLotteryNumber(previousLotteryNumber)\n    }\n\n    if (account && lotteryContract) {\n      getInitialLotteryIndex()\n    }\n  }, [account, lotteryContract])\n\n  const handleClick = (index) => {\n    setActiveIndex(index)\n  }\n\n  return (\n    <>\n      <Hero />\n      <Page>\n        <Wrapper>\n          <ButtonMenu activeIndex={activeIndex} onItemClick={handleClick} scale=\"sm\" variant=\"subtle\">\n            <ButtonMenuItem>{TranslateString(999, 'Next draw')}</ButtonMenuItem>\n            <ButtonMenuItem>{TranslateString(999, 'Past draws')}</ButtonMenuItem>\n          </ButtonMenu>\n        </Wrapper>\n        <Divider />\n        <PastLotteryDataContext.Provider\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\n        >\n          {activeIndex === 0 ? <NextDrawPage /> : <PastDrawsPage />}\n        </PastLotteryDataContext.Provider>\n      </Page>\n    </>\n  )\n}\n\nexport default Lottery\n"],"sourceRoot":""}